//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RSI3_ReverseProxyContract.ApplicationServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resource", Namespace="http://schemas.datacontract.org/2004/07/RSI3_ApplicationServiceContract")]
    [System.SerializableAttribute()]
    public partial class Resource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ApplicationServiceReference.IApplicationService")]
    public interface IApplicationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/get", ReplyAction="http://tempuri.org/IApplicationService/getResponse")]
        RSI3_ReverseProxyContract.ApplicationServiceReference.Resource get(string uri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/get", ReplyAction="http://tempuri.org/IApplicationService/getResponse")]
        System.Threading.Tasks.Task<RSI3_ReverseProxyContract.ApplicationServiceReference.Resource> getAsync(string uri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/create", ReplyAction="http://tempuri.org/IApplicationService/createResponse")]
        int create(RSI3_ReverseProxyContract.ApplicationServiceReference.Resource res);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/create", ReplyAction="http://tempuri.org/IApplicationService/createResponse")]
        System.Threading.Tasks.Task<int> createAsync(RSI3_ReverseProxyContract.ApplicationServiceReference.Resource res);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationServiceChannel : RSI3_ReverseProxyContract.ApplicationServiceReference.IApplicationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationServiceClient : System.ServiceModel.ClientBase<RSI3_ReverseProxyContract.ApplicationServiceReference.IApplicationService>, RSI3_ReverseProxyContract.ApplicationServiceReference.IApplicationService {
        
        public ApplicationServiceClient() {
        }
        
        public ApplicationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RSI3_ReverseProxyContract.ApplicationServiceReference.Resource get(string uri) {
            return base.Channel.get(uri);
        }
        
        public System.Threading.Tasks.Task<RSI3_ReverseProxyContract.ApplicationServiceReference.Resource> getAsync(string uri) {
            return base.Channel.getAsync(uri);
        }
        
        public int create(RSI3_ReverseProxyContract.ApplicationServiceReference.Resource res) {
            return base.Channel.create(res);
        }
        
        public System.Threading.Tasks.Task<int> createAsync(RSI3_ReverseProxyContract.ApplicationServiceReference.Resource res) {
            return base.Channel.createAsync(res);
        }
    }
}
