<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0067)http://sequoia.ict.pwr.wroc.pl/~mucha/PProg/PProg_lab_05/index.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-2"><title>PProg_lab_05</title>


<meta http-equiv="Refresh" content="3600"><!--<base href="http://sequoia.ict.pwr.wroc.pl/%7Emucha/PProg/">--><base href="."><style id="wrc-middle-css" type="text/css">.wrc_whole_window{	display: none;	position: fixed; 	z-index: 2147483647;	background-color: rgba(40, 40, 40, 0.9);	word-spacing: normal !important;	margin: 0px !important;	padding: 0px !important;	border: 0px !important;	left: 0px;	top: 0px;	width: 100%;	height: 100%;	line-height: normal !important;	letter-spacing: normal !important;	overflow: hidden;}.wrc_bar_window{	display: none;	position: fixed; 	z-index: 2147483647;	background-color: rgba(60, 60, 60, 1.0);	word-spacing: normal !important;	font-family: Segoe UI, Arial Unicode MS, Arial, Sans-Serif;	margin: 0px !important;	padding: 0px !important;	border: 0px !important;	left: 0px;	top: 0px;	width: 100%;	height: 40px;	line-height: normal !important;	letter-spacing: normal !important;	color: white !important;	font-size: 13px !important;}.wrc_middle {	display: table-cell;	vertical-align: middle;	width: 100%;}.wrc_middle_main {	font-family: Segoe UI, Arial Unicode MS, Arial, Sans-Serif;	font-size: 14px;	width: 600px;	height: auto;    background: url(chrome-extension://icmlaeflemplmjndnaapfdbbnpncnbda/skin/images/background-body.jpg) repeat-x left top;	background-color: rgb(39, 53, 62);	position: relative;	margin-left: auto;	margin-right: auto;	text-align: left;}.wrc_middle_tq_main {	font-family: Segoe UI, Arial Unicode MS, Arial, Sans-Serif;	font-size: 16px;	width: 615px;	height: 460px;    background: url(chrome-extension://icmlaeflemplmjndnaapfdbbnpncnbda/skin/images/background-sitecorrect.png) no-repeat;	background-color: white;	color: black !important;	position: relative;	margin-left: auto;	margin-right: auto;	text-align: center;}.wrc_middle_logo {    background: url(chrome-extension://icmlaeflemplmjndnaapfdbbnpncnbda/skin/images/logo.jpg) no-repeat left bottom;    width: 140px;    height: 42px;    color: orange;    display: table-cell;    text-align: right;    vertical-align: middle;}.wrc_icon_warning {	margin: 20px 10px 20px 15px;	float: left;	background-color: transparent;}.wrc_middle_title {    color: #b6bec7;	height: auto;    margin: 0px auto;	font-size: 2.2em;	white-space: nowrap;	text-align: center;}.wrc_middle_hline {    height: 2px;	width: 100%;    display: block;}.wrc_middle_description {	text-align: center;	margin: 15px;	font-size: 1.4em;	padding: 20px;	height: auto;	color: white;	min-height: 3.5em;}.wrc_middle_actions_main_div {	margin-bottom: 15px;	text-align: center;}.wrc_middle_actions_blue_button div {	display: inline-block;	width: auto;	cursor: Pointer;	margin: 3px 10px 3px 10px;	color: white;	font-size: 1.2em;	font-weight: bold;}.wrc_middle_actions_blue_button {	-moz-appearance: none;	border-radius: 7px;	-moz-border-radius: 7px/7px;	border-radius: 7px/7px;	background-color: rgb(0, 173, 223) !important;	display: inline-block;	width: auto;	cursor: Pointer;	border: 2px solid #00dddd;	padding: 0px 20px 0px 20px;}.wrc_middle_actions_blue_button:hover {	background-color: rgb(0, 159, 212) !important;}.wrc_middle_actions_blue_button:active {	background-color: rgb(0, 146, 200) !important;	border: 2px solid #00aaaa;}.wrc_middle_actions_grey_button div {	display: inline-block;	width: auto;	cursor: Pointer;	margin: 3px 10px 3px 10px;	color: white !important;	font-size: 15px;	font-weight: bold;}.wrc_middle_actions_grey_button {	-moz-appearance: none;	border-radius: 7px;	-moz-border-radius: 7px/7px;	border-radius: 7px/7px;	background-color: rgb(100, 100, 100) !important;	display: inline-block;	width: auto;	cursor: Pointer;	border: 2px solid #aaaaaa;	text-decoration: none;	padding: 0px 20px 0px 20px;}.wrc_middle_actions_grey_button:hover {	background-color: rgb(120, 120, 120) !important;}.wrc_middle_actions_grey_button:active {	background-color: rgb(130, 130, 130) !important;	border: 2px solid #00aaaa;}.wrc_middle_action_low {	font-size: 0.9em;	white-space: nowrap;	cursor: Pointer;	color: grey !important;	margin: 10px 10px 0px 10px;	text-decoration: none;}.wrc_middle_action_low:hover {	color: #aa4400 !important;}.wrc_middle_actions_rest_div {	padding-top: 5px;	white-space: nowrap;	text-align: center;}.wrc_middle_action {	white-space: nowrap;	cursor: Pointer;	color: red !important;	font-size: 1.2em;	margin: 10px 10px 0px 10px;	text-decoration: none;}.wrc_middle_action:hover {	color: #aa4400 !important;}</style><script id="wrc-script-middle_window" type="text/javascript" language="JavaScript">var g_inputsCnt = 0;var g_InputThis = new Array(null, null, null, null);var g_alerted = false;/* we test the input if it includes 4 digits   (input is a part of 4 inputs for filling the credit-card number)*/function is4DigitsCardNumber(val){	var regExp = new RegExp('[0-9]{4}');	return (val.length == 4 && val.search(regExp) == 0);}/* testing the whole credit-card number 19 digits devided by three '-' symbols or   exactly 16 digits without any dividers*/function isCreditCardNumber(val){	if(val.length == 19)	{		var regExp = new RegExp('[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{4}');		return (val.search(regExp) == 0);	}	else if(val.length == 16)	{		var regExp = new RegExp('[0-9]{4}[0-9]{4}[0-9]{4}[0-9]{4}');		return (val.search(regExp) == 0);	}	return false;}function CheckInputOnCreditNumber(self){	if(g_alerted)		return false;	var value = self.value;	if(self.type == 'text')	{		if(is4DigitsCardNumber(value))		{			var cont = true;			for(i = 0; i < g_inputsCnt; i++)				if(g_InputThis[i] == self)					cont = false;			if(cont && g_inputsCnt < 4)			{				g_InputThis[g_inputsCnt] = self;				g_inputsCnt++;			}		}		g_alerted = (g_inputsCnt == 4);		if(g_alerted)			g_inputsCnt = 0;		else			g_alerted = isCreditCardNumber(value);	}	return g_alerted;}function CheckInputOnPassword(self){	if(g_alerted)		return false;	var value = self.value;	if(self.type == 'password')	{		g_alerted = (value.length > 0);	}	return g_alerted;}function onInputBlur(self, bRatingOk, bFishingSite){	var bCreditNumber = CheckInputOnCreditNumber(self);	var bPassword = CheckInputOnPassword(self);	if((!bRatingOk || bFishingSite == 1) && (bCreditNumber || bPassword) )	{		var warnDiv = document.getElementById("wrcinputdiv");		if(warnDiv)		{			/* show the warning div in the middle of the screen */			warnDiv.style.left = "0px";			warnDiv.style.top = "0px";			warnDiv.style.width = "100%";			warnDiv.style.height = "100%";			document.getElementById("wrc_warn_fs").style.display = 'none';			document.getElementById("wrc_warn_cn").style.display = 'none';			if(bFishingSite)				document.getElementById("wrc_warn_fs").style.display = 'block';			else				document.getElementById("wrc_warn_cn").style.display = 'block';			warnDiv.style.display = 'table';		}	}}</script></head>

<body>
<h1>
Laboratorium 5 - Przetwarzanie obrazów 2<br>
</h1>

<h2>Zakres materia³u</h2>
Struktury. Zmienne dynamiczne. Tablice dynamiczne. Argumenty wywo³ania programu. Asercje i obs³uga b³êdów. Podzia³ programu na modu³y. Dokumentacja programu.

<h2>Przygotowanie do zajêæ</h2>
<p>
Przed przyst±pieniem do zajêæ przygotuj funkcje zapewniaj±ce nastêpuj±ce dzia³ania:
</p><ul>
<li>Przydzielenie pamiêci dla dynamicznej, kwadratowej tablicy dwuwymiarowej (o wymiarze podanym jako parametr funkcji). Funkcja jako swoj± warto¶æ powinna zwracaæ wska¼nik do zaalokowanej tablicy.</li>
<li>Wype³nienie elementów tablicy dwuwymiarowej (do której wska¼nik i której wymiar podane s± jako parametry funkcji) liczbami bêd±cymi iloczynem ich indeksów.</li>
<li>Wypisanie zawarto¶ci tablicy dwuwymiarowej (do której wska¼nik i której wymiar podane s± jako parametry funkcji) na standardowe wyj¶cie.</li>
<li>Zmianê znaków wszystkich elementów tablicy dwuwymiarowej (do której wska¼nik i której wymiar podane s± jako parametry funkcji) na przeciwny.</li>
<li>Dla chêtnych: Pomno¿enie dwóch kwadratowych tablic dwuwymiarowych (do których wska¼niki i których wymiar podane s± jako parametry funkcji). Gdzie w tym przypadku nale¿y umie¶ciæ wynik wykonanej operacji?</li>
<li>Wywo³anie powy¿ej opisanych funkcji, powoduj±ce wype³nienie tablicy, wypisanie jej zawarto¶ci na wyj¶cie, zmianê znaków elementów, ponowne wypisanie zawarto¶ci na wyj¶cie. Wymiar tablicy powinien byæ zadawany jako parametr wywo³ania programu. W przypadku wywo³ania bez parametru, lub z niew³a¶ciw± jego warto¶ci± program powinien wypisaæ stosowy komunikat. Przyk³adowy efekt dzia³ania funkcji:
<pre>[john_doe@diablo:~]$ ./a.out 4
Zawarto¶æ oryginalna:
   0    0    0    0
   0    1    2    3
   0    2    4    6
   0    3    6    9
Zawarto¶æ po zmianie znaków:
   0    0    0    0
   0   -1   -2   -3
   0   -2   -4   -6
   0   -3   -6   -9
[john_doe@diablo:~]$ ./a.out 
Niew³a¶ciwa liczba parametrów. U¿ycie: a.out wymiar_tablicy.
[john_doe@diablo:~]$ ./a.out -3
Niepoprawna warto¶æ parametru. Argument musi byæ dodatni.
</pre>
</li>
</ul>
Ponadto równie¿:
<ul>
<li>Zaproponuj strukturê danych, która bêdzie s³u¿y³a do przechowywania informacji o obrazie
  PGM. Zdefiniuj deklaracje funkcji (argumenty wywo³ania i zwracane warto¶ci) dla funkcji
  przetwarzania obrazów z wykorzystaniem zaproponowanej struktury.</li>
<li>Zdefiniuj warunki asercji, jakie powinny byæ sprawdzane w ka¿dej z funkcji.</li>
<li>Zaproponuj podzia³ programu na modu³y. W tym celu odpowiedz na pytania: 
 Które z funkcji powinny zostaæ logicznie wydzielone do oddzielnego pliku? Czy
 oprócz funkcji w module powinny znale¼æ siê inne elementy?</li>
<li>Przypomnij materia³ z wyk³adu dotycz±cy argumentów wywo³ania programu
oraz alokowania i usuwania tablic o zadanym rozmiarze.</li>
<li>Przeanalizuj funkcjê <tt>przetwarzaj_opcje</tt> z do³±czonego do zadania pliku <a href="http://sequoia.ict.pwr.wroc.pl/~mucha/PProg/opcje.c"><tt>opcje.c</tt></a>.</li>
</ul>
<p></p>


<h2>Zadanie do wykonania</h2>
<p>
Zmodyfikowaæ program do przetwarzania obrazów z laboratorium 3 zgodnie z nastêpuj±cymi
za³o¿eniami:
</p><ul>
<li>Wprowadziæ strukturê danych opisuj±c± ca³o¶ciowo przechowywany w pamiêci
obraz. Wykorzystaæ mo¿liwo¶æ dynamicznego ustalania rozmiaru tablic, aby dopasowaæ
rozmiar przechowywanych danych do rzeczywistych wymiarów obrazu. Zmodyfikowaæ
funkcje programu tak, aby wykorzystywa³y wprowadzon± strukturê.</li>
<li>Uzupe³niæ funkcje o asercje sprawdzaj±ce zaproponowane warunki poprawno¶ci.</li>
<li>Wydzieliæ wybrane elementy programu tworz±c modu³ i odpowiedni dla niego plik nag³ówkowy.</li>
<li>Zast±piæ menu u¿ytkownika, wykorzystuj±c argumenty wywo³ania programu.
Program powinien rozpoznawaæ nastêpuj±ce opcje:
<ul>
<li><tt>-i &lt;nazwa_pliku&gt;</tt> nazwa pliku do wczytania (je¶li zamiast nazwy podany
 bêdzie znak <tt>'-'</tt> to zamiast z pliku obraz powinien byæ wczytywany ze standardowego
 wej¶cia;
</li>
<li><tt>-o &lt;nazwa_pliku&gt;</tt> nazwa pliku do zapisu (je¶li zamiast nazwy podany
 bêdzie znak <tt>'-'</tt> to zamiast do pliku obraz powinien byæ wypisany na standardowym
 wyj¶ciu;
</li>
<li><tt>-p &lt;próg&gt;</tt> progowanie z progiem o zadanej warto¶ci.
</li>
<li><tt>-k</tt> konturowanie;
</li>
<li><tt>-n</tt> negatyw;
</li>
<li><tt>-d</tt> obraz po przetworzeniu powinien zostaæ wy¶wietlony;
</li>
</ul>
Kolejno¶æ w jakiej mog± wyst±piæ opcje jest dowolna.  Opcja
<tt>-i</tt> musi siê pojawiæ przy wywo³aniu programu. Jej brak, tak
jak i brak nazw plików po opcjach <tt>-i, -o</tt> oraz warto¶ci progu
po <tt>-p</tt> powinny spowodowaæ odpowiedni komunikat o b³êdzie. Brak
opcji <tt>-o</tt> oznacza wypisanie obrazu na standardowym wyj¶ciu. W
programie mo¿na wykorzystaæ odpowiednio zmodyfikowan± funkcjê z pliku
<tt>opcje.c</tt>.
</li>
<li>Zmodyfikowaæ dokumentacjê programu tak, by odpowiada³a wprowadzonym w programie zmianom.</li>
</ul>
<p></p>

<h3>Zadania dodatkowe (dla chêtnych)</h3>
<ul>
<li>Stworzyæ plik <tt>makefile</tt> pozwalaj±cy na automatyczn± kompilacjê programu poleceniem <tt>make</tt>.
</li>
<li>Uzupe³niæ program o inne funkcje przetwarzania obrazów
(rozmywanie, wyostrzanie, skalowanie, wycinanie fragmentów, obracanie,
wyliczanie splotu).
</li>
<li>Wyposa¿yæ program w mo¿liwo¶æ równoczesnego operowania na wiêcej ni¿ dwóch obrazach i funkcje do ³±czenia kilku obrazów (nak³adanie, przenikanie, maskowanie).
</li>
<li>Wyposa¿yæ program w interfejs typu pow³oki, pozwalajacy na wydawanie poleceñ operuj±cych obrazami.
</li>
</ul>

<h2>Przebieg æwiczenia</h2>

Wydaje siê, ¿e naj³atwiej mo¿na dokonaæ wymaganych zmian wprowadzaj±c je jedn± po drugiej w kolejno¶ci opisu w czê¶ci <strong>Zadanie do wykonania</strong>.



<h2>Sprawozdanie</h2>
Sprawozdanie powinno zawieraæ:

<ul>
<li>Imiê i nazwisko autora, temat æwiczenia, datê wykonania;
</li>
<li>Kod ¼ród³owy programu;
</li>
<li>Testy programu (opis przebiegu z wynikami) w tym kolejno:

<ul>
<li>Co dany test ma na celu;
</li>
<li>Metoda testowania - dane wej¶ciowe;
</li>
<li>Dane wyj¶ciowe zwrócone w te¶cie przez program;
</li>
<li>Rezultat testu - ocena plus ewentualny komentarz;
  
</li>
</ul>
</li>
<li>Wnioski koñcowe.
</li>
</ul>
Poniewa¿ w tym zadaniu program bêdzie sk³ada³ siê z kilku plików, jako plik sprawozdania mo¿na wykorzystaæ plik zawieraj±cy funkcjê main programu. Pozosta³e pliki nale¿y do³±czyæ do sprawozdania tworz±c archiwum poleceniem <tt>tar</tt>, w sposób pokazany poni¿ej
<pre>[john_doe@diablo:~]$ tar -cvf sprawozdanie5.tar plik1.c plik2.c plik2.h itp
</pre>
Tak utworzone archiwum jest plikiem binarnym, dlatego te¿, w celu przekazania go poczt± elektroniczn± lub systemem studinfo, musi zostaæ zakodowane za pomoc± znaków z podstawowego zakresu kodów ascii (kodowanie transportowe). Podczas gdy programy pocztowe takie kodowanie wykonuj± zazwyczaj automatycznie, dla systemu studinfo trzeba zrobiæ to samodzielnie poleceniem <tt>uuencode</tt>, w sposób pokazany poni¿ej
<pre>[john_doe@diablo:~]$ uuencode sprawozdanie5.tar sprawozdanie5.tar &gt; sprawozdanie5.tar.uu
</pre>
Czyno¶ci odwrotne do powy¿szych (dla chc±cych sprawdziæ poprawno¶æ wykonanych poleceñ) maj± postaæ
<pre>[john_doe@diablo:~]$ uudecode sprawozdanie5.tar.uu
[john_doe@diablo:~]$ tar -xvf sprawozdanie5.tar
</pre>
UWAGA! Je¶li lokalny katalog bêdzie zawiera³ pliki o nazwach identycznych z nazwami plików zawartych w archiwum, to zostan± one nadpisane. Tak¿e bezpiecznie jest przeprowadziæ ca³± operacjê w jakim¶ katalogu tymczasowym, po skopiowaniu archiwum tam¿e.


<h2>Pytania kontrolne</h2>
<ol>
<li>
Jak zdefiniowaæ strukturê zawieraj±c± obraz PGM?
</li>
<li>
Wska¿ powód zamiany struktur do przechowywania informacji o obrazie
  z zestawu zmiennych (przetwarzanie obrazów 1) na pojedyncz± strukturê.
</li>
<li>
Jakie kroki nale¿y wykonaæ, by móc korzystaæ z dynamicznej tablicy
dwuwymiarowej?
</li>
<li>
Jaka jest struktura zmiennej <tt>argv</tt>?
</li>
<li>
Omów sposób obs³ugi b³êdów w przyk³adowym programie <tt>opcje.c</tt>.
</li>
<li>
Czym s± asercje? Jak powinna wygl±daæ asercja dla funkcji wczytuj±cej obraz?
</li>
<li>
Jaka powinna byæ zawarto¶æ pliku nag³ówkowego modu³u?
</li>
<li>
W sk³ad programu wchodz± nastêpuj±ce pliki: <tt>modul.c</tt> (z
  definicjami funkcji eksportowanych) oraz <tt>main.c</tt> (z definicj± funkcji
  g³ównej i nag³ówkami funkcji importowanych). Jak powinny wygl±daæ
  poszczególne kroki kompilacji programu?
</li>
</ol>


</body></html>