
klepsydra.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000096c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000009c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000002a  00000000  00000000  000009e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000022c  00000000  00000000  00000a0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000159  00000000  00000000  00000c36  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000a20  00000000  00000000  00000d8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  000017b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000012c  00000000  00000000  000017e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000001e8  00000000  00000000  0000190c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 3c 00 	call	0x78	; 0x78 <main>
  64:	0c 94 b4 04 	jmp	0x968	; 0x968 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <wartoscAdc>:
#define RGB_GOFF PORTD&=~(0x40)
#define RGB_BON PORTD|=0x20
#define RGB_BOFF PORTD&=~(0x20)

int wartoscAdc (void) {
    while (!(ADCSRA & (1<<ADIF)));
  6c:	34 9b       	sbis	0x06, 4	; 6
  6e:	fe cf       	rjmp	.-4      	; 0x6c <wartoscAdc>
		ADCSRA|=(1<<ADIF);
  70:	34 9a       	sbi	0x06, 4	; 6
    return ADCH;
  72:	85 b1       	in	r24, 0x05	; 5
} 
  74:	90 e0       	ldi	r25, 0x00	; 0
  76:	08 95       	ret

00000078 <main>:

int main() {
  78:	2f 92       	push	r2
  7a:	3f 92       	push	r3
  7c:	4f 92       	push	r4
  7e:	5f 92       	push	r5
  80:	6f 92       	push	r6
  82:	7f 92       	push	r7
  84:	8f 92       	push	r8
  86:	9f 92       	push	r9
  88:	af 92       	push	r10
  8a:	bf 92       	push	r11
  8c:	cf 92       	push	r12
  8e:	df 92       	push	r13
  90:	ef 92       	push	r14
  92:	ff 92       	push	r15
  94:	0f 93       	push	r16
  96:	1f 93       	push	r17
  98:	cf 93       	push	r28
  9a:	df 93       	push	r29
	DDRA = 0xFC;
  9c:	8c ef       	ldi	r24, 0xFC	; 252
  9e:	8a bb       	out	0x1a, r24	; 26
	DDRB |= 0x11;
  a0:	87 b3       	in	r24, 0x17	; 23
  a2:	81 61       	ori	r24, 0x11	; 17
  a4:	87 bb       	out	0x17, r24	; 23
	DDRC = 0xFF;
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xE0;
  aa:	80 ee       	ldi	r24, 0xE0	; 224
  ac:	81 bb       	out	0x11, r24	; 17
	ms = 100;
	tryb = 0;	// 0 - klepsydra, 1 - poziomica
	gora = 0;
	dol = CZAS;
	kierunek = 1;
	UCSRA &= ~(1 << U2X);
  ae:	59 98       	cbi	0x0b, 1	; 11
	UCSRC &= ~(1 << UMSEL); //setting the UMSEL bit to 0 for asynchronous mode
  b0:	80 b5       	in	r24, 0x20	; 32
  b2:	8f 7b       	andi	r24, 0xBF	; 191
  b4:	80 bd       	out	0x20, r24	; 32
	ADCSRA = 0b11000110;//ADC  
  b6:	86 ec       	ldi	r24, 0xC6	; 198
  b8:	86 b9       	out	0x06, r24	; 6
  ba:	66 24       	eor	r6, r6
  bc:	77 24       	eor	r7, r7
  be:	48 ec       	ldi	r20, 0xC8	; 200
  c0:	84 2e       	mov	r8, r20
  c2:	91 2c       	mov	r9, r1
  c4:	c1 e0       	ldi	r28, 0x01	; 1
  c6:	d0 e0       	ldi	r29, 0x00	; 0
		while((UCSRA &(1<<UDRE)) == 0); //czekam na uarta		
			ADCSRA |= 1<<ADSC; // START conversion
			ADMUX = 0XE0;   // x  wybieram kana³ adc i sczytujê dane
			x = wartoscAdc();
			x = x - 80;
			x = (x*180)/145;
  c8:	34 eb       	ldi	r19, 0xB4	; 180
  ca:	23 2e       	mov	r2, r19
  cc:	31 2c       	mov	r3, r1
						if (kat < -150 || kat > 150)
							gora++;
					}
					else
						gora = CZAS;
					dol = CZAS - gora;
  ce:	28 ec       	ldi	r18, 0xC8	; 200
  d0:	42 2e       	mov	r4, r18
  d2:	51 2c       	mov	r5, r1
	UCSRC &= ~(1 << UMSEL); //setting the UMSEL bit to 0 for asynchronous mode
	ADCSRA = 0b11000110;//ADC  
	uint8_t low;
	uint16_t w10b;
	while(1) {
		if (!bit_is_clear(PINB,PD3)) {
  d4:	b3 9b       	sbis	0x16, 3	; 22
  d6:	08 c0       	rjmp	.+16     	; 0xe8 <main+0x70>
			tryb = 1;
			RGB_BON;
  d8:	95 9a       	sbi	0x12, 5	; 18
			RGB_GOFF;
  da:	96 98       	cbi	0x12, 6	; 18
			RGB_ROFF;
  dc:	97 98       	cbi	0x12, 7	; 18
  de:	e1 e0       	ldi	r30, 0x01	; 1
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	0a e0       	ldi	r16, 0x0A	; 10
  e4:	10 e0       	ldi	r17, 0x00	; 0
  e6:	07 c0       	rjmp	.+14     	; 0xf6 <main+0x7e>
			ms = 10;
		}
		else {
			tryb = 0;
			RGB_GON;
  e8:	96 9a       	sbi	0x12, 6	; 18
			RGB_BOFF;
  ea:	95 98       	cbi	0x12, 5	; 18
			RGB_ROFF;
  ec:	97 98       	cbi	0x12, 7	; 18
  ee:	e0 e0       	ldi	r30, 0x00	; 0
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	04 e6       	ldi	r16, 0x64	; 100
  f4:	10 e0       	ldi	r17, 0x00	; 0
			ms = 100;
		}	
		while((UCSRA &(1<<UDRE)) == 0); //czekam na uarta		
  f6:	5d 9b       	sbis	0x0b, 5	; 11
  f8:	fe cf       	rjmp	.-4      	; 0xf6 <main+0x7e>
			ADCSRA |= 1<<ADSC; // START conversion
  fa:	36 9a       	sbi	0x06, 6	; 6
			ADMUX = 0XE0;   // x  wybieram kana³ adc i sczytujê dane
  fc:	20 ee       	ldi	r18, 0xE0	; 224
  fe:	27 b9       	out	0x07, r18	; 7
#define RGB_GOFF PORTD&=~(0x40)
#define RGB_BON PORTD|=0x20
#define RGB_BOFF PORTD&=~(0x20)

int wartoscAdc (void) {
    while (!(ADCSRA & (1<<ADIF)));
 100:	34 9b       	sbis	0x06, 4	; 6
 102:	fe cf       	rjmp	.-4      	; 0x100 <main+0x88>
		ADCSRA|=(1<<ADIF);
 104:	34 9a       	sbi	0x06, 4	; 6
    return ADCH;
 106:	85 b1       	in	r24, 0x05	; 5
 108:	90 e0       	ldi	r25, 0x00	; 0
		while((UCSRA &(1<<UDRE)) == 0); //czekam na uarta		
			ADCSRA |= 1<<ADSC; // START conversion
			ADMUX = 0XE0;   // x  wybieram kana³ adc i sczytujê dane
			x = wartoscAdc();
			x = x - 80;
			x = (x*180)/145;
 10a:	80 55       	subi	r24, 0x50	; 80
 10c:	90 40       	sbci	r25, 0x00	; 0
 10e:	9c 01       	movw	r18, r24
 110:	22 9d       	mul	r18, r2
 112:	c0 01       	movw	r24, r0
 114:	23 9d       	mul	r18, r3
 116:	90 0d       	add	r25, r0
 118:	32 9d       	mul	r19, r2
 11a:	90 0d       	add	r25, r0
 11c:	11 24       	eor	r1, r1
 11e:	61 e9       	ldi	r22, 0x91	; 145
 120:	70 e0       	ldi	r23, 0x00	; 0
 122:	0e 94 8d 04 	call	0x91a	; 0x91a <__divmodhi4>
 126:	ab 01       	movw	r20, r22
			ADCSRA |= 1<<ADSC; // START conversion
 128:	36 9a       	sbi	0x06, 6	; 6
			ADMUX = 0XE1;
 12a:	31 ee       	ldi	r19, 0xE1	; 225
 12c:	37 b9       	out	0x07, r19	; 7
#define RGB_GOFF PORTD&=~(0x40)
#define RGB_BON PORTD|=0x20
#define RGB_BOFF PORTD&=~(0x20)

int wartoscAdc (void) {
    while (!(ADCSRA & (1<<ADIF)));
 12e:	34 9b       	sbis	0x06, 4	; 6
 130:	fe cf       	rjmp	.-4      	; 0x12e <main+0xb6>
		ADCSRA|=(1<<ADIF);
 132:	34 9a       	sbi	0x06, 4	; 6
    return ADCH;
 134:	85 b1       	in	r24, 0x05	; 5
			x = (x*180)/145;
			ADCSRA |= 1<<ADSC; // START conversion
			ADMUX = 0XE1;
			y = wartoscAdc();
			y = y - 140; //wysrodkowanie 
			if (y < 0)
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	8c 38       	cpi	r24, 0x8C	; 140
 13a:	91 05       	cpc	r25, r1
 13c:	14 f4       	brge	.+4      	; 0x142 <main+0xca>
 13e:	9a 01       	movw	r18, r20
 140:	04 c0       	rjmp	.+8      	; 0x14a <main+0xd2>
				kat = x;
			else
				kat = -x;
 142:	22 27       	eor	r18, r18
 144:	33 27       	eor	r19, r19
 146:	24 1b       	sub	r18, r20
 148:	35 0b       	sbc	r19, r21
			kat -= 30;
 14a:	a9 01       	movw	r20, r18
 14c:	4e 51       	subi	r20, 0x1E	; 30
 14e:	50 40       	sbci	r21, 0x00	; 0
			if (tryb == 0) {
 150:	ef 2b       	or	r30, r31
 152:	09 f0       	breq	.+2      	; 0x156 <main+0xde>
 154:	73 c1       	rjmp	.+742    	; 0x43c <main+0x3c4>
				if (kat > -75 && kat < 75) {
 156:	c9 01       	movw	r24, r18
 158:	8c 96       	adiw	r24, 0x2c	; 44
 15a:	85 39       	cpi	r24, 0x95	; 149
 15c:	91 05       	cpc	r25, r1
 15e:	c0 f4       	brcc	.+48     	; 0x190 <main+0x118>
					if (dol < CZAS) {
 160:	88 ec       	ldi	r24, 0xC8	; 200
 162:	88 16       	cp	r8, r24
 164:	91 04       	cpc	r9, r1
 166:	24 f0       	brlt	.+8      	; 0x170 <main+0xf8>
 168:	98 ec       	ldi	r25, 0xC8	; 200
 16a:	89 2e       	mov	r8, r25
 16c:	91 2c       	mov	r9, r1
 16e:	0b c0       	rjmp	.+22     	; 0x186 <main+0x10e>
						dol++;
 170:	08 94       	sec
 172:	81 1c       	adc	r8, r1
 174:	91 1c       	adc	r9, r1
						if (kat > -15 && kat < 15)
 176:	20 51       	subi	r18, 0x10	; 16
 178:	30 40       	sbci	r19, 0x00	; 0
 17a:	2d 31       	cpi	r18, 0x1D	; 29
 17c:	31 05       	cpc	r19, r1
 17e:	18 f4       	brcc	.+6      	; 0x186 <main+0x10e>
							dol++;
 180:	08 94       	sec
 182:	81 1c       	adc	r8, r1
 184:	91 1c       	adc	r9, r1
					}
					else
						dol = CZAS;
					gora = CZAS - dol;
					if (kierunek <= 0)
 186:	1c 16       	cp	r1, r28
 188:	1d 06       	cpc	r1, r29
 18a:	0c f4       	brge	.+2      	; 0x18e <main+0x116>
 18c:	73 c2       	rjmp	.+1254   	; 0x674 <__stack+0x215>
 18e:	70 c2       	rjmp	.+1248   	; 0x670 <__stack+0x211>
						kierunek = 1;
				}
				if (kierunek > 0) {
 190:	1c 16       	cp	r1, r28
 192:	1d 06       	cpc	r1, r29
 194:	0c f0       	brlt	.+2      	; 0x198 <main+0x120>
 196:	4a c0       	rjmp	.+148    	; 0x22c <main+0x1b4>
					if (kierunek % 4 == 1) {
 198:	ce 01       	movw	r24, r28
 19a:	83 70       	andi	r24, 0x03	; 3
 19c:	90 70       	andi	r25, 0x00	; 0
 19e:	81 30       	cpi	r24, 0x01	; 1
 1a0:	91 05       	cpc	r25, r1
 1a2:	19 f4       	brne	.+6      	; 0x1aa <main+0x132>
						D1_ON;
 1a4:	a8 9a       	sbi	0x15, 0	; 21
						D2_OFF;
 1a6:	a9 98       	cbi	0x15, 1	; 21
 1a8:	05 c0       	rjmp	.+10     	; 0x1b4 <main+0x13c>
						D3_OFF;
						D4_OFF;
					}
					if (kierunek % 4 == 2) {
 1aa:	82 30       	cpi	r24, 0x02	; 2
 1ac:	91 05       	cpc	r25, r1
 1ae:	21 f4       	brne	.+8      	; 0x1b8 <main+0x140>
						D1_OFF;
 1b0:	a8 98       	cbi	0x15, 0	; 21
						D2_ON;
 1b2:	a9 9a       	sbi	0x15, 1	; 21
						D3_OFF;
 1b4:	aa 98       	cbi	0x15, 2	; 21
 1b6:	05 c0       	rjmp	.+10     	; 0x1c2 <main+0x14a>
						D4_OFF;
					}
					if (kierunek % 4 == 3) {
 1b8:	03 97       	sbiw	r24, 0x03	; 3
 1ba:	21 f4       	brne	.+8      	; 0x1c4 <main+0x14c>
						D1_OFF;
 1bc:	a8 98       	cbi	0x15, 0	; 21
						D2_OFF;
 1be:	a9 98       	cbi	0x15, 1	; 21
						D3_ON;
 1c0:	aa 9a       	sbi	0x15, 2	; 21
						D4_OFF;
 1c2:	df 98       	cbi	0x1b, 7	; 27
					}
					if (kierunek % 4 == 0) {
 1c4:	ce 01       	movw	r24, r28
 1c6:	83 70       	andi	r24, 0x03	; 3
 1c8:	90 70       	andi	r25, 0x00	; 0
 1ca:	89 2b       	or	r24, r25
 1cc:	21 f4       	brne	.+8      	; 0x1d6 <main+0x15e>
						D1_OFF;
 1ce:	a8 98       	cbi	0x15, 0	; 21
						D2_OFF;
 1d0:	a9 98       	cbi	0x15, 1	; 21
						D3_OFF;
 1d2:	aa 98       	cbi	0x15, 2	; 21
						D4_ON;
 1d4:	df 9a       	sbi	0x1b, 7	; 27
					}
					kierunek++;
 1d6:	21 96       	adiw	r28, 0x01	; 1
					if (dol >= poziom) {
 1d8:	28 e2       	ldi	r18, 0x28	; 40
 1da:	82 16       	cp	r8, r18
 1dc:	91 04       	cpc	r9, r1
 1de:	34 f1       	brlt	.+76     	; 0x22c <main+0x1b4>
						D5_ON;
 1e0:	db 9a       	sbi	0x1b, 3	; 27
						D55_ON;
 1e2:	c0 9a       	sbi	0x18, 0	; 24
						G1_ON;
 1e4:	ac 9a       	sbi	0x15, 4	; 21
						G2_ON;
 1e6:	ad 9a       	sbi	0x15, 5	; 21
						G3_ON;
 1e8:	ae 9a       	sbi	0x15, 6	; 21
						G33_ON;
 1ea:	af 9a       	sbi	0x15, 7	; 21
						G4_ON;
 1ec:	de 9a       	sbi	0x1b, 6	; 27
						G44_ON;
 1ee:	dc 9a       	sbi	0x1b, 4	; 27
						G55_OFF;
 1f0:	c4 98       	cbi	0x18, 4	; 24
						G5_OFF;
 1f2:	da 98       	cbi	0x1b, 2	; 27
						if (dol >= 2*poziom) {
 1f4:	30 e5       	ldi	r19, 0x50	; 80
 1f6:	83 16       	cp	r8, r19
 1f8:	91 04       	cpc	r9, r1
 1fa:	c4 f0       	brlt	.+48     	; 0x22c <main+0x1b4>
							D4_ON;
 1fc:	df 9a       	sbi	0x1b, 7	; 27
							D44_ON;
 1fe:	dd 9a       	sbi	0x1b, 5	; 27
							G44_OFF;
 200:	dc 98       	cbi	0x1b, 4	; 27
							G4_OFF;
 202:	de 98       	cbi	0x1b, 6	; 27
							if (dol >= 3*poziom) {
 204:	88 e7       	ldi	r24, 0x78	; 120
 206:	88 16       	cp	r8, r24
 208:	91 04       	cpc	r9, r1
 20a:	84 f0       	brlt	.+32     	; 0x22c <main+0x1b4>
								D3_ON;
 20c:	aa 9a       	sbi	0x15, 2	; 21
								D33_ON;
 20e:	ab 9a       	sbi	0x15, 3	; 21
								G33_OFF;
 210:	af 98       	cbi	0x15, 7	; 21
								G3_OFF;
 212:	ae 98       	cbi	0x15, 6	; 21
								if (dol >= 4*poziom) {
 214:	20 ea       	ldi	r18, 0xA0	; 160
 216:	82 16       	cp	r8, r18
 218:	91 04       	cpc	r9, r1
 21a:	44 f0       	brlt	.+16     	; 0x22c <main+0x1b4>
									D2_ON;
 21c:	a9 9a       	sbi	0x15, 1	; 21
									G2_OFF;
 21e:	ad 98       	cbi	0x15, 5	; 21
									if (dol == 5*poziom) {
 220:	38 ec       	ldi	r19, 0xC8	; 200
 222:	83 16       	cp	r8, r19
 224:	91 04       	cpc	r9, r1
 226:	11 f4       	brne	.+4      	; 0x22c <main+0x1b4>
										D1_ON;
 228:	a8 9a       	sbi	0x15, 0	; 21
										G1_OFF;
 22a:	ac 98       	cbi	0x15, 4	; 21
								}
							}
						}
					}
				}
				if (kat < -105 || kat > 105) {
 22c:	ca 01       	movw	r24, r20
 22e:	87 59       	subi	r24, 0x97	; 151
 230:	9f 4f       	sbci	r25, 0xFF	; 255
 232:	83 3d       	cpi	r24, 0xD3	; 211
 234:	91 05       	cpc	r25, r1
 236:	b8 f0       	brcs	.+46     	; 0x266 <main+0x1ee>
					if (gora < CZAS) {
 238:	88 ec       	ldi	r24, 0xC8	; 200
 23a:	68 16       	cp	r6, r24
 23c:	71 04       	cpc	r7, r1
 23e:	24 f0       	brlt	.+8      	; 0x248 <main+0x1d0>
 240:	88 ec       	ldi	r24, 0xC8	; 200
 242:	68 2e       	mov	r6, r24
 244:	71 2c       	mov	r7, r1
 246:	0c c0       	rjmp	.+24     	; 0x260 <main+0x1e8>
						gora++;
 248:	08 94       	sec
 24a:	61 1c       	adc	r6, r1
 24c:	71 1c       	adc	r7, r1
						if (kat < -150 || kat > 150)
 24e:	ca 01       	movw	r24, r20
 250:	8a 56       	subi	r24, 0x6A	; 106
 252:	9f 4f       	sbci	r25, 0xFF	; 255
 254:	8d 52       	subi	r24, 0x2D	; 45
 256:	91 40       	sbci	r25, 0x01	; 1
 258:	18 f0       	brcs	.+6      	; 0x260 <main+0x1e8>
							gora++;
 25a:	08 94       	sec
 25c:	61 1c       	adc	r6, r1
 25e:	71 1c       	adc	r7, r1
					}
					else
						gora = CZAS;
					dol = CZAS - gora;
					if (kierunek >= 0)
 260:	d7 ff       	sbrs	r29, 7
 262:	0c c2       	rjmp	.+1048   	; 0x67c <__stack+0x21d>
 264:	0d c2       	rjmp	.+1050   	; 0x680 <__stack+0x221>
						kierunek = -1;
				}
				if (kierunek < 0) {
 266:	d7 ff       	sbrs	r29, 7
 268:	4d c0       	rjmp	.+154    	; 0x304 <main+0x28c>
					if (-kierunek % 4 == 1) {
 26a:	22 27       	eor	r18, r18
 26c:	33 27       	eor	r19, r19
 26e:	2c 1b       	sub	r18, r28
 270:	3d 0b       	sbc	r19, r29
 272:	c9 01       	movw	r24, r18
 274:	83 70       	andi	r24, 0x03	; 3
 276:	90 70       	andi	r25, 0x00	; 0
 278:	81 30       	cpi	r24, 0x01	; 1
 27a:	91 05       	cpc	r25, r1
 27c:	19 f4       	brne	.+6      	; 0x284 <main+0x20c>
						G1_ON;
 27e:	ac 9a       	sbi	0x15, 4	; 21
						G2_OFF;
 280:	ad 98       	cbi	0x15, 5	; 21
 282:	05 c0       	rjmp	.+10     	; 0x28e <main+0x216>
						G3_OFF;
						G4_OFF;
					}
					if (-kierunek % 4 == 2) {
 284:	82 30       	cpi	r24, 0x02	; 2
 286:	91 05       	cpc	r25, r1
 288:	21 f4       	brne	.+8      	; 0x292 <main+0x21a>
						G1_OFF;
 28a:	ac 98       	cbi	0x15, 4	; 21
						G2_ON;
 28c:	ad 9a       	sbi	0x15, 5	; 21
						G3_OFF;
 28e:	ae 98       	cbi	0x15, 6	; 21
 290:	05 c0       	rjmp	.+10     	; 0x29c <main+0x224>
						G4_OFF;
					}
					if (-kierunek % 4 == 3) {
 292:	03 97       	sbiw	r24, 0x03	; 3
 294:	21 f4       	brne	.+8      	; 0x29e <main+0x226>
						G1_OFF;
 296:	ac 98       	cbi	0x15, 4	; 21
						G2_OFF;
 298:	ad 98       	cbi	0x15, 5	; 21
						G3_ON;
 29a:	ae 9a       	sbi	0x15, 6	; 21
						G4_OFF;
 29c:	de 98       	cbi	0x1b, 6	; 27
					}
					if (-kierunek % 4 == 0) {
 29e:	23 70       	andi	r18, 0x03	; 3
 2a0:	30 70       	andi	r19, 0x00	; 0
 2a2:	23 2b       	or	r18, r19
 2a4:	21 f4       	brne	.+8      	; 0x2ae <main+0x236>
						G1_OFF;
 2a6:	ac 98       	cbi	0x15, 4	; 21
						G2_OFF;
 2a8:	ad 98       	cbi	0x15, 5	; 21
						G3_OFF;
 2aa:	ae 98       	cbi	0x15, 6	; 21
						G4_ON;
 2ac:	de 9a       	sbi	0x1b, 6	; 27
					}
					kierunek--;
 2ae:	21 97       	sbiw	r28, 0x01	; 1
					if (gora >= poziom) {
 2b0:	38 e2       	ldi	r19, 0x28	; 40
 2b2:	63 16       	cp	r6, r19
 2b4:	71 04       	cpc	r7, r1
 2b6:	34 f1       	brlt	.+76     	; 0x304 <main+0x28c>
						G5_ON;
 2b8:	da 9a       	sbi	0x1b, 2	; 27
						G55_ON;
 2ba:	c4 9a       	sbi	0x18, 4	; 24
						D1_ON;
 2bc:	a8 9a       	sbi	0x15, 0	; 21
						D2_ON;
 2be:	a9 9a       	sbi	0x15, 1	; 21
						D3_ON;
 2c0:	aa 9a       	sbi	0x15, 2	; 21
						D33_ON;
 2c2:	ab 9a       	sbi	0x15, 3	; 21
						D4_ON;
 2c4:	df 9a       	sbi	0x1b, 7	; 27
						D44_ON;
 2c6:	dd 9a       	sbi	0x1b, 5	; 27
						D55_OFF;
 2c8:	c0 98       	cbi	0x18, 0	; 24
						D5_OFF;
 2ca:	db 98       	cbi	0x1b, 3	; 27
						if (gora >= 2*poziom) {
 2cc:	80 e5       	ldi	r24, 0x50	; 80
 2ce:	68 16       	cp	r6, r24
 2d0:	71 04       	cpc	r7, r1
 2d2:	c4 f0       	brlt	.+48     	; 0x304 <main+0x28c>
							G4_ON;
 2d4:	de 9a       	sbi	0x1b, 6	; 27
							G44_ON;
 2d6:	dc 9a       	sbi	0x1b, 4	; 27
							D44_OFF;
 2d8:	dd 98       	cbi	0x1b, 5	; 27
							D4_OFF;
 2da:	df 98       	cbi	0x1b, 7	; 27
							if (gora >= 3*poziom) {
 2dc:	28 e7       	ldi	r18, 0x78	; 120
 2de:	62 16       	cp	r6, r18
 2e0:	71 04       	cpc	r7, r1
 2e2:	84 f0       	brlt	.+32     	; 0x304 <main+0x28c>
								G3_ON;
 2e4:	ae 9a       	sbi	0x15, 6	; 21
								G33_ON;
 2e6:	af 9a       	sbi	0x15, 7	; 21
								D33_OFF;
 2e8:	ab 98       	cbi	0x15, 3	; 21
								D3_OFF;
 2ea:	aa 98       	cbi	0x15, 2	; 21
								if (gora >= 4*poziom) {
 2ec:	30 ea       	ldi	r19, 0xA0	; 160
 2ee:	63 16       	cp	r6, r19
 2f0:	71 04       	cpc	r7, r1
 2f2:	44 f0       	brlt	.+16     	; 0x304 <main+0x28c>
									G2_ON;
 2f4:	ad 9a       	sbi	0x15, 5	; 21
									D2_OFF;
 2f6:	a9 98       	cbi	0x15, 1	; 21
									if (gora == 5*poziom) {
 2f8:	88 ec       	ldi	r24, 0xC8	; 200
 2fa:	68 16       	cp	r6, r24
 2fc:	71 04       	cpc	r7, r1
 2fe:	11 f4       	brne	.+4      	; 0x304 <main+0x28c>
										G1_ON;
 300:	ac 9a       	sbi	0x15, 4	; 21
										D1_OFF;
 302:	a8 98       	cbi	0x15, 0	; 21
								}
							}
						}
					}
				}
				if (dol == CZAS) {
 304:	28 ec       	ldi	r18, 0xC8	; 200
 306:	82 16       	cp	r8, r18
 308:	91 04       	cpc	r9, r1
 30a:	79 f4       	brne	.+30     	; 0x32a <main+0x2b2>
					PORTC &= 0x00;
 30c:	85 b3       	in	r24, 0x15	; 21
 30e:	15 ba       	out	0x15, r1	; 21
					PORTC |= 0x0F;
 310:	85 b3       	in	r24, 0x15	; 21
 312:	8f 60       	ori	r24, 0x0F	; 15
 314:	85 bb       	out	0x15, r24	; 21
					PORTA &= ~(0xFC);
 316:	8b b3       	in	r24, 0x1b	; 27
 318:	83 70       	andi	r24, 0x03	; 3
 31a:	8b bb       	out	0x1b, r24	; 27
					PORTA |= 0xA8;
 31c:	8b b3       	in	r24, 0x1b	; 27
 31e:	88 6a       	ori	r24, 0xA8	; 168
 320:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 322:	88 b3       	in	r24, 0x18	; 24
 324:	8e 7e       	andi	r24, 0xEE	; 238
 326:	88 bb       	out	0x18, r24	; 24
					PORTB |= 0x01;
 328:	c0 9a       	sbi	0x18, 0	; 24
				}
				if (gora == CZAS) {
 32a:	38 ec       	ldi	r19, 0xC8	; 200
 32c:	63 16       	cp	r6, r19
 32e:	71 04       	cpc	r7, r1
 330:	79 f4       	brne	.+30     	; 0x350 <main+0x2d8>
					PORTC &= 0x00;
 332:	85 b3       	in	r24, 0x15	; 21
 334:	15 ba       	out	0x15, r1	; 21
					PORTC |= 0xF0;
 336:	85 b3       	in	r24, 0x15	; 21
 338:	80 6f       	ori	r24, 0xF0	; 240
 33a:	85 bb       	out	0x15, r24	; 21
					PORTA &= ~(0xFC);
 33c:	8b b3       	in	r24, 0x1b	; 27
 33e:	83 70       	andi	r24, 0x03	; 3
 340:	8b bb       	out	0x1b, r24	; 27
					PORTA |= 0x54;
 342:	8b b3       	in	r24, 0x1b	; 27
 344:	84 65       	ori	r24, 0x54	; 84
 346:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 348:	88 b3       	in	r24, 0x18	; 24
 34a:	8e 7e       	andi	r24, 0xEE	; 238
 34c:	88 bb       	out	0x18, r24	; 24
					PORTA |= 0x10;
 34e:	dc 9a       	sbi	0x1b, 4	; 27
				}
				if ((kat < -75 && kat > -105) || (kat > 75 && kat < 105)) {
 350:	ca 01       	movw	r24, r20
 352:	88 59       	subi	r24, 0x98	; 152
 354:	9f 4f       	sbci	r25, 0xFF	; 255
 356:	4d 97       	sbiw	r24, 0x1d	; 29
 358:	30 f0       	brcs	.+12     	; 0x366 <main+0x2ee>
 35a:	4c 54       	subi	r20, 0x4C	; 76
 35c:	50 40       	sbci	r21, 0x00	; 0
 35e:	4d 31       	cpi	r20, 0x1D	; 29
 360:	51 05       	cpc	r21, r1
 362:	08 f0       	brcs	.+2      	; 0x366 <main+0x2ee>
 364:	42 c1       	rjmp	.+644    	; 0x5ea <__stack+0x18b>
					if (kierunek > 0 && dol < CZAS) {
 366:	1c 16       	cp	r1, r28
 368:	1d 06       	cpc	r1, r29
 36a:	9c f5       	brge	.+102    	; 0x3d2 <main+0x35a>
 36c:	88 ec       	ldi	r24, 0xC8	; 200
 36e:	88 16       	cp	r8, r24
 370:	91 04       	cpc	r9, r1
 372:	0c f0       	brlt	.+2      	; 0x376 <main+0x2fe>
 374:	60 c0       	rjmp	.+192    	; 0x436 <main+0x3be>
						PORTC &= 0x00;
 376:	85 b3       	in	r24, 0x15	; 21
 378:	15 ba       	out	0x15, r1	; 21
						PORTC |= 0xF0;
 37a:	85 b3       	in	r24, 0x15	; 21
 37c:	80 6f       	ori	r24, 0xF0	; 240
 37e:	85 bb       	out	0x15, r24	; 21
						PORTA &= ~(0xFC);
 380:	8b b3       	in	r24, 0x1b	; 27
 382:	83 70       	andi	r24, 0x03	; 3
 384:	8b bb       	out	0x1b, r24	; 27
						PORTA |= 0x54;
 386:	8b b3       	in	r24, 0x1b	; 27
 388:	84 65       	ori	r24, 0x54	; 84
 38a:	8b bb       	out	0x1b, r24	; 27
						PORTB &= ~(0x11);
 38c:	88 b3       	in	r24, 0x18	; 24
 38e:	8e 7e       	andi	r24, 0xEE	; 238
 390:	88 bb       	out	0x18, r24	; 24
						PORTA |= 0x10;
 392:	dc 9a       	sbi	0x1b, 4	; 27
						if (dol > poziom) {
 394:	29 e2       	ldi	r18, 0x29	; 41
 396:	82 16       	cp	r8, r18
 398:	91 04       	cpc	r9, r1
 39a:	0c f4       	brge	.+2      	; 0x39e <main+0x326>
 39c:	4c c0       	rjmp	.+152    	; 0x436 <main+0x3be>
							G1_OFF;
 39e:	ac 98       	cbi	0x15, 4	; 21
							D55_ON;
 3a0:	c0 9a       	sbi	0x18, 0	; 24
							D5_ON;
 3a2:	db 9a       	sbi	0x1b, 3	; 27
							if (dol > 2*poziom) {
 3a4:	31 e5       	ldi	r19, 0x51	; 81
 3a6:	83 16       	cp	r8, r19
 3a8:	91 04       	cpc	r9, r1
 3aa:	0c f4       	brge	.+2      	; 0x3ae <main+0x336>
 3ac:	44 c0       	rjmp	.+136    	; 0x436 <main+0x3be>
								G2_OFF;
 3ae:	ad 98       	cbi	0x15, 5	; 21
								D44_ON;
 3b0:	dd 9a       	sbi	0x1b, 5	; 27
								D4_ON;
 3b2:	df 9a       	sbi	0x1b, 7	; 27
								if (dol > 3*poziom) {
 3b4:	89 e7       	ldi	r24, 0x79	; 121
 3b6:	88 16       	cp	r8, r24
 3b8:	91 04       	cpc	r9, r1
 3ba:	ec f1       	brlt	.+122    	; 0x436 <main+0x3be>
									G3_OFF;
 3bc:	ae 98       	cbi	0x15, 6	; 21
									G33_OFF;
 3be:	af 98       	cbi	0x15, 7	; 21
									D33_ON;
 3c0:	ab 9a       	sbi	0x15, 3	; 21
									D3_ON;
 3c2:	aa 9a       	sbi	0x15, 2	; 21
									if (dol > 4*poziom) {
 3c4:	21 ea       	ldi	r18, 0xA1	; 161
 3c6:	82 16       	cp	r8, r18
 3c8:	91 04       	cpc	r9, r1
 3ca:	ac f1       	brlt	.+106    	; 0x436 <main+0x3be>
										G2_OFF;
 3cc:	ad 98       	cbi	0x15, 5	; 21
										D2_ON;
 3ce:	a9 9a       	sbi	0x15, 1	; 21
 3d0:	32 c0       	rjmp	.+100    	; 0x436 <main+0x3be>
									}
								}
							}
						}
					}
					if (kierunek < 0 && gora < CZAS) {
 3d2:	20 97       	sbiw	r28, 0x00	; 0
 3d4:	09 f4       	brne	.+2      	; 0x3d8 <main+0x360>
 3d6:	09 c1       	rjmp	.+530    	; 0x5ea <__stack+0x18b>
 3d8:	38 ec       	ldi	r19, 0xC8	; 200
 3da:	63 16       	cp	r6, r19
 3dc:	71 04       	cpc	r7, r1
 3de:	5c f5       	brge	.+86     	; 0x436 <main+0x3be>
						PORTC &= 0x00;
 3e0:	85 b3       	in	r24, 0x15	; 21
 3e2:	15 ba       	out	0x15, r1	; 21
						PORTC |= 0x0F;
 3e4:	85 b3       	in	r24, 0x15	; 21
 3e6:	8f 60       	ori	r24, 0x0F	; 15
 3e8:	85 bb       	out	0x15, r24	; 21
						PORTA &= ~(0xFC);
 3ea:	8b b3       	in	r24, 0x1b	; 27
 3ec:	83 70       	andi	r24, 0x03	; 3
 3ee:	8b bb       	out	0x1b, r24	; 27
						PORTA |= 0xA8;
 3f0:	8b b3       	in	r24, 0x1b	; 27
 3f2:	88 6a       	ori	r24, 0xA8	; 168
 3f4:	8b bb       	out	0x1b, r24	; 27
						PORTB &= ~(0x11);
 3f6:	88 b3       	in	r24, 0x18	; 24
 3f8:	8e 7e       	andi	r24, 0xEE	; 238
 3fa:	88 bb       	out	0x18, r24	; 24
						PORTB |= 0x01;
 3fc:	c0 9a       	sbi	0x18, 0	; 24
						if (gora > poziom) {
 3fe:	89 e2       	ldi	r24, 0x29	; 41
 400:	68 16       	cp	r6, r24
 402:	71 04       	cpc	r7, r1
 404:	c4 f0       	brlt	.+48     	; 0x436 <main+0x3be>
							D1_OFF;
 406:	a8 98       	cbi	0x15, 0	; 21
							G55_ON;
 408:	c4 9a       	sbi	0x18, 4	; 24
							G5_ON;
 40a:	da 9a       	sbi	0x1b, 2	; 27
							if (gora > 2*poziom) {
 40c:	21 e5       	ldi	r18, 0x51	; 81
 40e:	62 16       	cp	r6, r18
 410:	71 04       	cpc	r7, r1
 412:	8c f0       	brlt	.+34     	; 0x436 <main+0x3be>
								D2_OFF;
 414:	a9 98       	cbi	0x15, 1	; 21
								G44_ON;
 416:	dc 9a       	sbi	0x1b, 4	; 27
								G4_ON;
 418:	de 9a       	sbi	0x1b, 6	; 27
								if (gora > 3*poziom) {
 41a:	39 e7       	ldi	r19, 0x79	; 121
 41c:	63 16       	cp	r6, r19
 41e:	71 04       	cpc	r7, r1
 420:	54 f0       	brlt	.+20     	; 0x436 <main+0x3be>
									D3_OFF;
 422:	aa 98       	cbi	0x15, 2	; 21
									D33_OFF;
 424:	ab 98       	cbi	0x15, 3	; 21
									G33_ON;
 426:	af 9a       	sbi	0x15, 7	; 21
									G3_ON;
 428:	ae 9a       	sbi	0x15, 6	; 21
									if (gora > 4*poziom) {
 42a:	81 ea       	ldi	r24, 0xA1	; 161
 42c:	68 16       	cp	r6, r24
 42e:	71 04       	cpc	r7, r1
 430:	14 f0       	brlt	.+4      	; 0x436 <main+0x3be>
										D2_OFF;
 432:	a9 98       	cbi	0x15, 1	; 21
										G2_ON;
 434:	ad 9a       	sbi	0x15, 5	; 21
 436:	c0 e0       	ldi	r28, 0x00	; 0
 438:	d0 e0       	ldi	r29, 0x00	; 0
 43a:	d7 c0       	rjmp	.+430    	; 0x5ea <__stack+0x18b>
					}
					kierunek = 0;
				}
			}
			if (tryb == 1) {
				if ((kat < -75 && kat > -105) || (kat > 75 && kat < 105)) {
 43c:	c9 01       	movw	r24, r18
 43e:	86 5b       	subi	r24, 0xB6	; 182
 440:	9f 4f       	sbci	r25, 0xFF	; 255
 442:	4d 97       	sbiw	r24, 0x1d	; 29
 444:	28 f0       	brcs	.+10     	; 0x450 <main+0x3d8>
 446:	2a 56       	subi	r18, 0x6A	; 106
 448:	30 40       	sbci	r19, 0x00	; 0
 44a:	2d 31       	cpi	r18, 0x1D	; 29
 44c:	31 05       	cpc	r19, r1
 44e:	40 f4       	brcc	.+16     	; 0x460 <__stack+0x1>
					PORTC &= 0x00;
 450:	85 b3       	in	r24, 0x15	; 21
 452:	15 ba       	out	0x15, r1	; 21
					PORTA &= ~(0xFC);
 454:	8b b3       	in	r24, 0x1b	; 27
 456:	83 70       	andi	r24, 0x03	; 3
 458:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 45a:	88 b3       	in	r24, 0x18	; 24
 45c:	8e 7e       	andi	r24, 0xEE	; 238
 45e:	88 bb       	out	0x18, r24	; 24
				}
				if ((kat > -75 && kat < -60) || (kat > 60 && kat < 75)) {
 460:	ca 01       	movw	r24, r20
 462:	86 5b       	subi	r24, 0xB6	; 182
 464:	9f 4f       	sbci	r25, 0xFF	; 255
 466:	0e 97       	sbiw	r24, 0x0e	; 14
 468:	20 f0       	brcs	.+8      	; 0x472 <__stack+0x13>
 46a:	ca 01       	movw	r24, r20
 46c:	cd 97       	sbiw	r24, 0x3d	; 61
 46e:	0e 97       	sbiw	r24, 0x0e	; 14
 470:	48 f4       	brcc	.+18     	; 0x484 <__stack+0x25>
					PORTC &= 0x00;
 472:	85 b3       	in	r24, 0x15	; 21
 474:	15 ba       	out	0x15, r1	; 21
					PORTA &= ~(0xFC);
 476:	8b b3       	in	r24, 0x1b	; 27
 478:	83 70       	andi	r24, 0x03	; 3
 47a:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 47c:	88 b3       	in	r24, 0x18	; 24
 47e:	8e 7e       	andi	r24, 0xEE	; 238
 480:	88 bb       	out	0x18, r24	; 24
					D1_ON;
 482:	a8 9a       	sbi	0x15, 0	; 21
				}
				if ((kat < -45 && kat > -60) || (kat > 45 && kat < 60)) {
 484:	ca 01       	movw	r24, r20
 486:	cb 96       	adiw	r24, 0x3b	; 59
 488:	0e 97       	sbiw	r24, 0x0e	; 14
 48a:	20 f0       	brcs	.+8      	; 0x494 <__stack+0x35>
 48c:	ca 01       	movw	r24, r20
 48e:	8e 97       	sbiw	r24, 0x2e	; 46
 490:	0e 97       	sbiw	r24, 0x0e	; 14
 492:	50 f4       	brcc	.+20     	; 0x4a8 <__stack+0x49>
					PORTC &= 0x00;
 494:	85 b3       	in	r24, 0x15	; 21
 496:	15 ba       	out	0x15, r1	; 21
					PORTA &= ~(0xFC);
 498:	8b b3       	in	r24, 0x1b	; 27
 49a:	83 70       	andi	r24, 0x03	; 3
 49c:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 49e:	88 b3       	in	r24, 0x18	; 24
 4a0:	8e 7e       	andi	r24, 0xEE	; 238
 4a2:	88 bb       	out	0x18, r24	; 24
					D1_ON;
 4a4:	a8 9a       	sbi	0x15, 0	; 21
					D2_ON; 
 4a6:	a9 9a       	sbi	0x15, 1	; 21
				}
				if ((kat < -30 && kat > -45) || (kat > 30 && kat < 45)) {
 4a8:	ca 01       	movw	r24, r20
 4aa:	8c 96       	adiw	r24, 0x2c	; 44
 4ac:	0e 97       	sbiw	r24, 0x0e	; 14
 4ae:	20 f0       	brcs	.+8      	; 0x4b8 <__stack+0x59>
 4b0:	ca 01       	movw	r24, r20
 4b2:	4f 97       	sbiw	r24, 0x1f	; 31
 4b4:	0e 97       	sbiw	r24, 0x0e	; 14
 4b6:	58 f4       	brcc	.+22     	; 0x4ce <__stack+0x6f>
					PORTC &= 0x00;
 4b8:	85 b3       	in	r24, 0x15	; 21
 4ba:	15 ba       	out	0x15, r1	; 21
					PORTA &= ~(0xFC);
 4bc:	8b b3       	in	r24, 0x1b	; 27
 4be:	83 70       	andi	r24, 0x03	; 3
 4c0:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 4c2:	88 b3       	in	r24, 0x18	; 24
 4c4:	8e 7e       	andi	r24, 0xEE	; 238
 4c6:	88 bb       	out	0x18, r24	; 24
					D1_ON;
 4c8:	a8 9a       	sbi	0x15, 0	; 21
					D2_ON;
 4ca:	a9 9a       	sbi	0x15, 1	; 21
					D3_ON;
 4cc:	aa 9a       	sbi	0x15, 2	; 21
				}
				if ((kat < -15 && kat > -30) || (kat > 15 && kat < 30)) {
 4ce:	ca 01       	movw	r24, r20
 4d0:	4d 96       	adiw	r24, 0x1d	; 29
 4d2:	0e 97       	sbiw	r24, 0x0e	; 14
 4d4:	20 f0       	brcs	.+8      	; 0x4de <__stack+0x7f>
 4d6:	ca 01       	movw	r24, r20
 4d8:	40 97       	sbiw	r24, 0x10	; 16
 4da:	0e 97       	sbiw	r24, 0x0e	; 14
 4dc:	60 f4       	brcc	.+24     	; 0x4f6 <__stack+0x97>
					PORTC &= 0x00;
 4de:	85 b3       	in	r24, 0x15	; 21
 4e0:	15 ba       	out	0x15, r1	; 21
					PORTA &= ~(0xFC);
 4e2:	8b b3       	in	r24, 0x1b	; 27
 4e4:	83 70       	andi	r24, 0x03	; 3
 4e6:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 4e8:	88 b3       	in	r24, 0x18	; 24
 4ea:	8e 7e       	andi	r24, 0xEE	; 238
 4ec:	88 bb       	out	0x18, r24	; 24
					D1_ON;
 4ee:	a8 9a       	sbi	0x15, 0	; 21
					D2_ON;
 4f0:	a9 9a       	sbi	0x15, 1	; 21
					D3_ON;
 4f2:	aa 9a       	sbi	0x15, 2	; 21
					D4_ON;
 4f4:	df 9a       	sbi	0x1b, 7	; 27
				}
				if (kat < 15 && kat > -15) {
 4f6:	ca 01       	movw	r24, r20
 4f8:	0e 96       	adiw	r24, 0x0e	; 14
 4fa:	4d 97       	sbiw	r24, 0x1d	; 29
 4fc:	68 f4       	brcc	.+26     	; 0x518 <__stack+0xb9>
					PORTC &= 0x00;
 4fe:	85 b3       	in	r24, 0x15	; 21
 500:	15 ba       	out	0x15, r1	; 21
					PORTA &= ~(0xFC);
 502:	8b b3       	in	r24, 0x1b	; 27
 504:	83 70       	andi	r24, 0x03	; 3
 506:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 508:	88 b3       	in	r24, 0x18	; 24
 50a:	8e 7e       	andi	r24, 0xEE	; 238
 50c:	88 bb       	out	0x18, r24	; 24
					D1_ON;
 50e:	a8 9a       	sbi	0x15, 0	; 21
					D2_ON;
 510:	a9 9a       	sbi	0x15, 1	; 21
					D3_ON;
 512:	aa 9a       	sbi	0x15, 2	; 21
					D4_ON;
 514:	df 9a       	sbi	0x1b, 7	; 27
					D5_ON;
 516:	db 9a       	sbi	0x1b, 3	; 27
				}
				if ((kat > 105 && kat < 120) || (kat < -105 && kat > -120)) {
 518:	ca 01       	movw	r24, r20
 51a:	8a 56       	subi	r24, 0x6A	; 106
 51c:	90 40       	sbci	r25, 0x00	; 0
 51e:	0e 97       	sbiw	r24, 0x0e	; 14
 520:	28 f0       	brcs	.+10     	; 0x52c <__stack+0xcd>
 522:	ca 01       	movw	r24, r20
 524:	89 58       	subi	r24, 0x89	; 137
 526:	9f 4f       	sbci	r25, 0xFF	; 255
 528:	0e 97       	sbiw	r24, 0x0e	; 14
 52a:	48 f4       	brcc	.+18     	; 0x53e <__stack+0xdf>
					PORTC &= 0x00;
 52c:	85 b3       	in	r24, 0x15	; 21
 52e:	15 ba       	out	0x15, r1	; 21
					PORTA &= ~(0xFC);
 530:	8b b3       	in	r24, 0x1b	; 27
 532:	83 70       	andi	r24, 0x03	; 3
 534:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 536:	88 b3       	in	r24, 0x18	; 24
 538:	8e 7e       	andi	r24, 0xEE	; 238
 53a:	88 bb       	out	0x18, r24	; 24
					G1_ON;
 53c:	ac 9a       	sbi	0x15, 4	; 21
				}
				if ((kat > 120 && kat < 135) || (kat < -120 && kat > -135)) {
 53e:	ca 01       	movw	r24, r20
 540:	89 57       	subi	r24, 0x79	; 121
 542:	90 40       	sbci	r25, 0x00	; 0
 544:	0e 97       	sbiw	r24, 0x0e	; 14
 546:	28 f0       	brcs	.+10     	; 0x552 <__stack+0xf3>
 548:	ca 01       	movw	r24, r20
 54a:	8a 57       	subi	r24, 0x7A	; 122
 54c:	9f 4f       	sbci	r25, 0xFF	; 255
 54e:	0e 97       	sbiw	r24, 0x0e	; 14
 550:	50 f4       	brcc	.+20     	; 0x566 <__stack+0x107>
					PORTC &= 0x00;
 552:	85 b3       	in	r24, 0x15	; 21
 554:	15 ba       	out	0x15, r1	; 21
					PORTA &= ~(0xFC);
 556:	8b b3       	in	r24, 0x1b	; 27
 558:	83 70       	andi	r24, 0x03	; 3
 55a:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 55c:	88 b3       	in	r24, 0x18	; 24
 55e:	8e 7e       	andi	r24, 0xEE	; 238
 560:	88 bb       	out	0x18, r24	; 24
					G1_ON;
 562:	ac 9a       	sbi	0x15, 4	; 21
					G2_ON;
 564:	ad 9a       	sbi	0x15, 5	; 21
				}
				if ((kat > 135 && kat < 150) || (kat < -135 && kat > -150)) {
 566:	ca 01       	movw	r24, r20
 568:	88 58       	subi	r24, 0x88	; 136
 56a:	90 40       	sbci	r25, 0x00	; 0
 56c:	0e 97       	sbiw	r24, 0x0e	; 14
 56e:	28 f0       	brcs	.+10     	; 0x57a <__stack+0x11b>
 570:	ca 01       	movw	r24, r20
 572:	8b 56       	subi	r24, 0x6B	; 107
 574:	9f 4f       	sbci	r25, 0xFF	; 255
 576:	0e 97       	sbiw	r24, 0x0e	; 14
 578:	58 f4       	brcc	.+22     	; 0x590 <__stack+0x131>
					PORTC &= 0x00;
 57a:	85 b3       	in	r24, 0x15	; 21
 57c:	15 ba       	out	0x15, r1	; 21
					PORTA &= ~(0xFC);
 57e:	8b b3       	in	r24, 0x1b	; 27
 580:	83 70       	andi	r24, 0x03	; 3
 582:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 584:	88 b3       	in	r24, 0x18	; 24
 586:	8e 7e       	andi	r24, 0xEE	; 238
 588:	88 bb       	out	0x18, r24	; 24
					G1_ON;
 58a:	ac 9a       	sbi	0x15, 4	; 21
					G2_ON;
 58c:	ad 9a       	sbi	0x15, 5	; 21
					G3_ON;
 58e:	ae 9a       	sbi	0x15, 6	; 21
				}
				if ((kat > 150 && kat < 165) || (kat < -150 && kat > -165)) {
 590:	ca 01       	movw	r24, r20
 592:	87 59       	subi	r24, 0x97	; 151
 594:	90 40       	sbci	r25, 0x00	; 0
 596:	0e 97       	sbiw	r24, 0x0e	; 14
 598:	28 f0       	brcs	.+10     	; 0x5a4 <__stack+0x145>
 59a:	ca 01       	movw	r24, r20
 59c:	8c 55       	subi	r24, 0x5C	; 92
 59e:	9f 4f       	sbci	r25, 0xFF	; 255
 5a0:	0e 97       	sbiw	r24, 0x0e	; 14
 5a2:	60 f4       	brcc	.+24     	; 0x5bc <__stack+0x15d>
					PORTC &= 0x00;
 5a4:	85 b3       	in	r24, 0x15	; 21
 5a6:	15 ba       	out	0x15, r1	; 21
					PORTA &= ~(0xFC);
 5a8:	8b b3       	in	r24, 0x1b	; 27
 5aa:	83 70       	andi	r24, 0x03	; 3
 5ac:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 5ae:	88 b3       	in	r24, 0x18	; 24
 5b0:	8e 7e       	andi	r24, 0xEE	; 238
 5b2:	88 bb       	out	0x18, r24	; 24
					G1_ON;
 5b4:	ac 9a       	sbi	0x15, 4	; 21
					G2_ON;
 5b6:	ad 9a       	sbi	0x15, 5	; 21
					G3_ON;
 5b8:	ae 9a       	sbi	0x15, 6	; 21
					G4_ON;
 5ba:	de 9a       	sbi	0x1b, 6	; 27
				}
				if ((kat > 165 && kat < 180) || (kat < -165 && kat > -180)) {
 5bc:	ca 01       	movw	r24, r20
 5be:	86 5a       	subi	r24, 0xA6	; 166
 5c0:	90 40       	sbci	r25, 0x00	; 0
 5c2:	0e 97       	sbiw	r24, 0x0e	; 14
 5c4:	28 f0       	brcs	.+10     	; 0x5d0 <__stack+0x171>
 5c6:	4d 54       	subi	r20, 0x4D	; 77
 5c8:	5f 4f       	sbci	r21, 0xFF	; 255
 5ca:	4e 30       	cpi	r20, 0x0E	; 14
 5cc:	51 05       	cpc	r21, r1
 5ce:	68 f4       	brcc	.+26     	; 0x5ea <__stack+0x18b>
					PORTC &= 0x00;
 5d0:	85 b3       	in	r24, 0x15	; 21
 5d2:	15 ba       	out	0x15, r1	; 21
					PORTA &= ~(0xFC);
 5d4:	8b b3       	in	r24, 0x1b	; 27
 5d6:	83 70       	andi	r24, 0x03	; 3
 5d8:	8b bb       	out	0x1b, r24	; 27
					PORTB &= ~(0x11);
 5da:	88 b3       	in	r24, 0x18	; 24
 5dc:	8e 7e       	andi	r24, 0xEE	; 238
 5de:	88 bb       	out	0x18, r24	; 24
					G1_ON;
 5e0:	ac 9a       	sbi	0x15, 4	; 21
					G2_ON;
 5e2:	ad 9a       	sbi	0x15, 5	; 21
					G3_ON;
 5e4:	ae 9a       	sbi	0x15, 6	; 21
					G4_ON;
 5e6:	de 9a       	sbi	0x1b, 6	; 27
					G5_ON;
 5e8:	da 9a       	sbi	0x1b, 2	; 27
				}
			}
			_delay_ms(ms);
 5ea:	b8 01       	movw	r22, r16
 5ec:	88 27       	eor	r24, r24
 5ee:	77 fd       	sbrc	r23, 7
 5f0:	80 95       	com	r24
 5f2:	98 2f       	mov	r25, r24
 5f4:	0e 94 76 03 	call	0x6ec	; 0x6ec <__floatsisf>
 5f8:	5b 01       	movw	r10, r22
 5fa:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 5fc:	20 e0       	ldi	r18, 0x00	; 0
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	4a e7       	ldi	r20, 0x7A	; 122
 602:	54 e4       	ldi	r21, 0x44	; 68
 604:	0e 94 02 04 	call	0x804	; 0x804 <__mulsf3>
 608:	7b 01       	movw	r14, r22
 60a:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
 60c:	20 e0       	ldi	r18, 0x00	; 0
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	40 e8       	ldi	r20, 0x80	; 128
 612:	5f e3       	ldi	r21, 0x3F	; 63
 614:	0e 94 44 03 	call	0x688	; 0x688 <__cmpsf2>
 618:	88 23       	and	r24, r24
 61a:	1c f4       	brge	.+6      	; 0x622 <__stack+0x1c3>
 61c:	61 e0       	ldi	r22, 0x01	; 1
 61e:	70 e0       	ldi	r23, 0x00	; 0
 620:	23 c0       	rjmp	.+70     	; 0x668 <__stack+0x209>
		__ticks = 1;
	else if (__tmp > 65535)
 622:	c8 01       	movw	r24, r16
 624:	b7 01       	movw	r22, r14
 626:	20 e0       	ldi	r18, 0x00	; 0
 628:	3f ef       	ldi	r19, 0xFF	; 255
 62a:	4f e7       	ldi	r20, 0x7F	; 127
 62c:	57 e4       	ldi	r21, 0x47	; 71
 62e:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__gesf2>
 632:	18 16       	cp	r1, r24
 634:	ac f4       	brge	.+42     	; 0x660 <__stack+0x201>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 636:	c6 01       	movw	r24, r12
 638:	b5 01       	movw	r22, r10
 63a:	20 e0       	ldi	r18, 0x00	; 0
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	40 e2       	ldi	r20, 0x20	; 32
 640:	51 e4       	ldi	r21, 0x41	; 65
 642:	0e 94 02 04 	call	0x804	; 0x804 <__mulsf3>
 646:	0e 94 48 03 	call	0x690	; 0x690 <__fixunssfsi>
 64a:	06 c0       	rjmp	.+12     	; 0x658 <__stack+0x1f9>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 64c:	84 e6       	ldi	r24, 0x64	; 100
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	01 97       	sbiw	r24, 0x01	; 1
 652:	f1 f7       	brne	.-4      	; 0x650 <__stack+0x1f1>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 654:	61 50       	subi	r22, 0x01	; 1
 656:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 658:	61 15       	cp	r22, r1
 65a:	71 05       	cpc	r23, r1
 65c:	b9 f7       	brne	.-18     	; 0x64c <__stack+0x1ed>
 65e:	3a cd       	rjmp	.-1420   	; 0xd4 <main+0x5c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 660:	c8 01       	movw	r24, r16
 662:	b7 01       	movw	r22, r14
 664:	0e 94 48 03 	call	0x690	; 0x690 <__fixunssfsi>
 668:	cb 01       	movw	r24, r22
 66a:	01 97       	sbiw	r24, 0x01	; 1
 66c:	f1 f7       	brne	.-4      	; 0x66a <__stack+0x20b>
 66e:	32 cd       	rjmp	.-1436   	; 0xd4 <main+0x5c>
 670:	c1 e0       	ldi	r28, 0x01	; 1
 672:	d0 e0       	ldi	r29, 0x00	; 0
						if (kat > -15 && kat < 15)
							dol++;
					}
					else
						dol = CZAS;
					gora = CZAS - dol;
 674:	32 01       	movw	r6, r4
 676:	68 18       	sub	r6, r8
 678:	79 08       	sbc	r7, r9
 67a:	8e cd       	rjmp	.-1252   	; 0x198 <main+0x120>
 67c:	cf ef       	ldi	r28, 0xFF	; 255
 67e:	df ef       	ldi	r29, 0xFF	; 255
						if (kat < -150 || kat > 150)
							gora++;
					}
					else
						gora = CZAS;
					dol = CZAS - gora;
 680:	42 01       	movw	r8, r4
 682:	86 18       	sub	r8, r6
 684:	97 08       	sbc	r9, r7
 686:	f1 cd       	rjmp	.-1054   	; 0x26a <main+0x1f2>

00000688 <__cmpsf2>:
 688:	6c d0       	rcall	.+216    	; 0x762 <__fp_cmp>
 68a:	08 f4       	brcc	.+2      	; 0x68e <__cmpsf2+0x6>
 68c:	81 e0       	ldi	r24, 0x01	; 1
 68e:	08 95       	ret

00000690 <__fixunssfsi>:
 690:	94 d0       	rcall	.+296    	; 0x7ba <__fp_splitA>
 692:	88 f0       	brcs	.+34     	; 0x6b6 <__fixunssfsi+0x26>
 694:	9f 57       	subi	r25, 0x7F	; 127
 696:	90 f0       	brcs	.+36     	; 0x6bc <__fixunssfsi+0x2c>
 698:	b9 2f       	mov	r27, r25
 69a:	99 27       	eor	r25, r25
 69c:	b7 51       	subi	r27, 0x17	; 23
 69e:	a0 f0       	brcs	.+40     	; 0x6c8 <__fixunssfsi+0x38>
 6a0:	d1 f0       	breq	.+52     	; 0x6d6 <__fixunssfsi+0x46>
 6a2:	66 0f       	add	r22, r22
 6a4:	77 1f       	adc	r23, r23
 6a6:	88 1f       	adc	r24, r24
 6a8:	99 1f       	adc	r25, r25
 6aa:	1a f0       	brmi	.+6      	; 0x6b2 <__fixunssfsi+0x22>
 6ac:	ba 95       	dec	r27
 6ae:	c9 f7       	brne	.-14     	; 0x6a2 <__fixunssfsi+0x12>
 6b0:	12 c0       	rjmp	.+36     	; 0x6d6 <__fixunssfsi+0x46>
 6b2:	b1 30       	cpi	r27, 0x01	; 1
 6b4:	81 f0       	breq	.+32     	; 0x6d6 <__fixunssfsi+0x46>
 6b6:	9b d0       	rcall	.+310    	; 0x7ee <__fp_zero>
 6b8:	b1 e0       	ldi	r27, 0x01	; 1
 6ba:	08 95       	ret
 6bc:	98 c0       	rjmp	.+304    	; 0x7ee <__fp_zero>
 6be:	67 2f       	mov	r22, r23
 6c0:	78 2f       	mov	r23, r24
 6c2:	88 27       	eor	r24, r24
 6c4:	b8 5f       	subi	r27, 0xF8	; 248
 6c6:	39 f0       	breq	.+14     	; 0x6d6 <__fixunssfsi+0x46>
 6c8:	b9 3f       	cpi	r27, 0xF9	; 249
 6ca:	cc f3       	brlt	.-14     	; 0x6be <__fixunssfsi+0x2e>
 6cc:	86 95       	lsr	r24
 6ce:	77 95       	ror	r23
 6d0:	67 95       	ror	r22
 6d2:	b3 95       	inc	r27
 6d4:	d9 f7       	brne	.-10     	; 0x6cc <__fixunssfsi+0x3c>
 6d6:	3e f4       	brtc	.+14     	; 0x6e6 <__fixunssfsi+0x56>
 6d8:	90 95       	com	r25
 6da:	80 95       	com	r24
 6dc:	70 95       	com	r23
 6de:	61 95       	neg	r22
 6e0:	7f 4f       	sbci	r23, 0xFF	; 255
 6e2:	8f 4f       	sbci	r24, 0xFF	; 255
 6e4:	9f 4f       	sbci	r25, 0xFF	; 255
 6e6:	08 95       	ret

000006e8 <__floatunsisf>:
 6e8:	e8 94       	clt
 6ea:	09 c0       	rjmp	.+18     	; 0x6fe <__floatsisf+0x12>

000006ec <__floatsisf>:
 6ec:	97 fb       	bst	r25, 7
 6ee:	3e f4       	brtc	.+14     	; 0x6fe <__floatsisf+0x12>
 6f0:	90 95       	com	r25
 6f2:	80 95       	com	r24
 6f4:	70 95       	com	r23
 6f6:	61 95       	neg	r22
 6f8:	7f 4f       	sbci	r23, 0xFF	; 255
 6fa:	8f 4f       	sbci	r24, 0xFF	; 255
 6fc:	9f 4f       	sbci	r25, 0xFF	; 255
 6fe:	99 23       	and	r25, r25
 700:	a9 f0       	breq	.+42     	; 0x72c <__floatsisf+0x40>
 702:	f9 2f       	mov	r31, r25
 704:	96 e9       	ldi	r25, 0x96	; 150
 706:	bb 27       	eor	r27, r27
 708:	93 95       	inc	r25
 70a:	f6 95       	lsr	r31
 70c:	87 95       	ror	r24
 70e:	77 95       	ror	r23
 710:	67 95       	ror	r22
 712:	b7 95       	ror	r27
 714:	f1 11       	cpse	r31, r1
 716:	f8 cf       	rjmp	.-16     	; 0x708 <__floatsisf+0x1c>
 718:	fa f4       	brpl	.+62     	; 0x758 <__floatsisf+0x6c>
 71a:	bb 0f       	add	r27, r27
 71c:	11 f4       	brne	.+4      	; 0x722 <__floatsisf+0x36>
 71e:	60 ff       	sbrs	r22, 0
 720:	1b c0       	rjmp	.+54     	; 0x758 <__floatsisf+0x6c>
 722:	6f 5f       	subi	r22, 0xFF	; 255
 724:	7f 4f       	sbci	r23, 0xFF	; 255
 726:	8f 4f       	sbci	r24, 0xFF	; 255
 728:	9f 4f       	sbci	r25, 0xFF	; 255
 72a:	16 c0       	rjmp	.+44     	; 0x758 <__floatsisf+0x6c>
 72c:	88 23       	and	r24, r24
 72e:	11 f0       	breq	.+4      	; 0x734 <__floatsisf+0x48>
 730:	96 e9       	ldi	r25, 0x96	; 150
 732:	11 c0       	rjmp	.+34     	; 0x756 <__floatsisf+0x6a>
 734:	77 23       	and	r23, r23
 736:	21 f0       	breq	.+8      	; 0x740 <__floatsisf+0x54>
 738:	9e e8       	ldi	r25, 0x8E	; 142
 73a:	87 2f       	mov	r24, r23
 73c:	76 2f       	mov	r23, r22
 73e:	05 c0       	rjmp	.+10     	; 0x74a <__floatsisf+0x5e>
 740:	66 23       	and	r22, r22
 742:	71 f0       	breq	.+28     	; 0x760 <__floatsisf+0x74>
 744:	96 e8       	ldi	r25, 0x86	; 134
 746:	86 2f       	mov	r24, r22
 748:	70 e0       	ldi	r23, 0x00	; 0
 74a:	60 e0       	ldi	r22, 0x00	; 0
 74c:	2a f0       	brmi	.+10     	; 0x758 <__floatsisf+0x6c>
 74e:	9a 95       	dec	r25
 750:	66 0f       	add	r22, r22
 752:	77 1f       	adc	r23, r23
 754:	88 1f       	adc	r24, r24
 756:	da f7       	brpl	.-10     	; 0x74e <__floatsisf+0x62>
 758:	88 0f       	add	r24, r24
 75a:	96 95       	lsr	r25
 75c:	87 95       	ror	r24
 75e:	97 f9       	bld	r25, 7
 760:	08 95       	ret

00000762 <__fp_cmp>:
 762:	99 0f       	add	r25, r25
 764:	00 08       	sbc	r0, r0
 766:	55 0f       	add	r21, r21
 768:	aa 0b       	sbc	r26, r26
 76a:	e0 e8       	ldi	r30, 0x80	; 128
 76c:	fe ef       	ldi	r31, 0xFE	; 254
 76e:	16 16       	cp	r1, r22
 770:	17 06       	cpc	r1, r23
 772:	e8 07       	cpc	r30, r24
 774:	f9 07       	cpc	r31, r25
 776:	c0 f0       	brcs	.+48     	; 0x7a8 <__fp_cmp+0x46>
 778:	12 16       	cp	r1, r18
 77a:	13 06       	cpc	r1, r19
 77c:	e4 07       	cpc	r30, r20
 77e:	f5 07       	cpc	r31, r21
 780:	98 f0       	brcs	.+38     	; 0x7a8 <__fp_cmp+0x46>
 782:	62 1b       	sub	r22, r18
 784:	73 0b       	sbc	r23, r19
 786:	84 0b       	sbc	r24, r20
 788:	95 0b       	sbc	r25, r21
 78a:	39 f4       	brne	.+14     	; 0x79a <__fp_cmp+0x38>
 78c:	0a 26       	eor	r0, r26
 78e:	61 f0       	breq	.+24     	; 0x7a8 <__fp_cmp+0x46>
 790:	23 2b       	or	r18, r19
 792:	24 2b       	or	r18, r20
 794:	25 2b       	or	r18, r21
 796:	21 f4       	brne	.+8      	; 0x7a0 <__fp_cmp+0x3e>
 798:	08 95       	ret
 79a:	0a 26       	eor	r0, r26
 79c:	09 f4       	brne	.+2      	; 0x7a0 <__fp_cmp+0x3e>
 79e:	a1 40       	sbci	r26, 0x01	; 1
 7a0:	a6 95       	lsr	r26
 7a2:	8f ef       	ldi	r24, 0xFF	; 255
 7a4:	81 1d       	adc	r24, r1
 7a6:	81 1d       	adc	r24, r1
 7a8:	08 95       	ret

000007aa <__fp_split3>:
 7aa:	57 fd       	sbrc	r21, 7
 7ac:	90 58       	subi	r25, 0x80	; 128
 7ae:	44 0f       	add	r20, r20
 7b0:	55 1f       	adc	r21, r21
 7b2:	59 f0       	breq	.+22     	; 0x7ca <__fp_splitA+0x10>
 7b4:	5f 3f       	cpi	r21, 0xFF	; 255
 7b6:	71 f0       	breq	.+28     	; 0x7d4 <__fp_splitA+0x1a>
 7b8:	47 95       	ror	r20

000007ba <__fp_splitA>:
 7ba:	88 0f       	add	r24, r24
 7bc:	97 fb       	bst	r25, 7
 7be:	99 1f       	adc	r25, r25
 7c0:	61 f0       	breq	.+24     	; 0x7da <__fp_splitA+0x20>
 7c2:	9f 3f       	cpi	r25, 0xFF	; 255
 7c4:	79 f0       	breq	.+30     	; 0x7e4 <__fp_splitA+0x2a>
 7c6:	87 95       	ror	r24
 7c8:	08 95       	ret
 7ca:	12 16       	cp	r1, r18
 7cc:	13 06       	cpc	r1, r19
 7ce:	14 06       	cpc	r1, r20
 7d0:	55 1f       	adc	r21, r21
 7d2:	f2 cf       	rjmp	.-28     	; 0x7b8 <__fp_split3+0xe>
 7d4:	46 95       	lsr	r20
 7d6:	f1 df       	rcall	.-30     	; 0x7ba <__fp_splitA>
 7d8:	08 c0       	rjmp	.+16     	; 0x7ea <__fp_splitA+0x30>
 7da:	16 16       	cp	r1, r22
 7dc:	17 06       	cpc	r1, r23
 7de:	18 06       	cpc	r1, r24
 7e0:	99 1f       	adc	r25, r25
 7e2:	f1 cf       	rjmp	.-30     	; 0x7c6 <__fp_splitA+0xc>
 7e4:	86 95       	lsr	r24
 7e6:	71 05       	cpc	r23, r1
 7e8:	61 05       	cpc	r22, r1
 7ea:	08 94       	sec
 7ec:	08 95       	ret

000007ee <__fp_zero>:
 7ee:	e8 94       	clt

000007f0 <__fp_szero>:
 7f0:	bb 27       	eor	r27, r27
 7f2:	66 27       	eor	r22, r22
 7f4:	77 27       	eor	r23, r23
 7f6:	cb 01       	movw	r24, r22
 7f8:	97 f9       	bld	r25, 7
 7fa:	08 95       	ret

000007fc <__gesf2>:
 7fc:	b2 df       	rcall	.-156    	; 0x762 <__fp_cmp>
 7fe:	08 f4       	brcc	.+2      	; 0x802 <__gesf2+0x6>
 800:	8f ef       	ldi	r24, 0xFF	; 255
 802:	08 95       	ret

00000804 <__mulsf3>:
 804:	0b d0       	rcall	.+22     	; 0x81c <__mulsf3x>
 806:	78 c0       	rjmp	.+240    	; 0x8f8 <__fp_round>
 808:	69 d0       	rcall	.+210    	; 0x8dc <__fp_pscA>
 80a:	28 f0       	brcs	.+10     	; 0x816 <__mulsf3+0x12>
 80c:	6e d0       	rcall	.+220    	; 0x8ea <__fp_pscB>
 80e:	18 f0       	brcs	.+6      	; 0x816 <__mulsf3+0x12>
 810:	95 23       	and	r25, r21
 812:	09 f0       	breq	.+2      	; 0x816 <__mulsf3+0x12>
 814:	5a c0       	rjmp	.+180    	; 0x8ca <__fp_inf>
 816:	5f c0       	rjmp	.+190    	; 0x8d6 <__fp_nan>
 818:	11 24       	eor	r1, r1
 81a:	ea cf       	rjmp	.-44     	; 0x7f0 <__fp_szero>

0000081c <__mulsf3x>:
 81c:	c6 df       	rcall	.-116    	; 0x7aa <__fp_split3>
 81e:	a0 f3       	brcs	.-24     	; 0x808 <__mulsf3+0x4>

00000820 <__mulsf3_pse>:
 820:	95 9f       	mul	r25, r21
 822:	d1 f3       	breq	.-12     	; 0x818 <__mulsf3+0x14>
 824:	95 0f       	add	r25, r21
 826:	50 e0       	ldi	r21, 0x00	; 0
 828:	55 1f       	adc	r21, r21
 82a:	62 9f       	mul	r22, r18
 82c:	f0 01       	movw	r30, r0
 82e:	72 9f       	mul	r23, r18
 830:	bb 27       	eor	r27, r27
 832:	f0 0d       	add	r31, r0
 834:	b1 1d       	adc	r27, r1
 836:	63 9f       	mul	r22, r19
 838:	aa 27       	eor	r26, r26
 83a:	f0 0d       	add	r31, r0
 83c:	b1 1d       	adc	r27, r1
 83e:	aa 1f       	adc	r26, r26
 840:	64 9f       	mul	r22, r20
 842:	66 27       	eor	r22, r22
 844:	b0 0d       	add	r27, r0
 846:	a1 1d       	adc	r26, r1
 848:	66 1f       	adc	r22, r22
 84a:	82 9f       	mul	r24, r18
 84c:	22 27       	eor	r18, r18
 84e:	b0 0d       	add	r27, r0
 850:	a1 1d       	adc	r26, r1
 852:	62 1f       	adc	r22, r18
 854:	73 9f       	mul	r23, r19
 856:	b0 0d       	add	r27, r0
 858:	a1 1d       	adc	r26, r1
 85a:	62 1f       	adc	r22, r18
 85c:	83 9f       	mul	r24, r19
 85e:	a0 0d       	add	r26, r0
 860:	61 1d       	adc	r22, r1
 862:	22 1f       	adc	r18, r18
 864:	74 9f       	mul	r23, r20
 866:	33 27       	eor	r19, r19
 868:	a0 0d       	add	r26, r0
 86a:	61 1d       	adc	r22, r1
 86c:	23 1f       	adc	r18, r19
 86e:	84 9f       	mul	r24, r20
 870:	60 0d       	add	r22, r0
 872:	21 1d       	adc	r18, r1
 874:	82 2f       	mov	r24, r18
 876:	76 2f       	mov	r23, r22
 878:	6a 2f       	mov	r22, r26
 87a:	11 24       	eor	r1, r1
 87c:	9f 57       	subi	r25, 0x7F	; 127
 87e:	50 40       	sbci	r21, 0x00	; 0
 880:	8a f0       	brmi	.+34     	; 0x8a4 <__mulsf3_pse+0x84>
 882:	e1 f0       	breq	.+56     	; 0x8bc <__mulsf3_pse+0x9c>
 884:	88 23       	and	r24, r24
 886:	4a f0       	brmi	.+18     	; 0x89a <__mulsf3_pse+0x7a>
 888:	ee 0f       	add	r30, r30
 88a:	ff 1f       	adc	r31, r31
 88c:	bb 1f       	adc	r27, r27
 88e:	66 1f       	adc	r22, r22
 890:	77 1f       	adc	r23, r23
 892:	88 1f       	adc	r24, r24
 894:	91 50       	subi	r25, 0x01	; 1
 896:	50 40       	sbci	r21, 0x00	; 0
 898:	a9 f7       	brne	.-22     	; 0x884 <__mulsf3_pse+0x64>
 89a:	9e 3f       	cpi	r25, 0xFE	; 254
 89c:	51 05       	cpc	r21, r1
 89e:	70 f0       	brcs	.+28     	; 0x8bc <__mulsf3_pse+0x9c>
 8a0:	14 c0       	rjmp	.+40     	; 0x8ca <__fp_inf>
 8a2:	a6 cf       	rjmp	.-180    	; 0x7f0 <__fp_szero>
 8a4:	5f 3f       	cpi	r21, 0xFF	; 255
 8a6:	ec f3       	brlt	.-6      	; 0x8a2 <__mulsf3_pse+0x82>
 8a8:	98 3e       	cpi	r25, 0xE8	; 232
 8aa:	dc f3       	brlt	.-10     	; 0x8a2 <__mulsf3_pse+0x82>
 8ac:	86 95       	lsr	r24
 8ae:	77 95       	ror	r23
 8b0:	67 95       	ror	r22
 8b2:	b7 95       	ror	r27
 8b4:	f7 95       	ror	r31
 8b6:	e7 95       	ror	r30
 8b8:	9f 5f       	subi	r25, 0xFF	; 255
 8ba:	c1 f7       	brne	.-16     	; 0x8ac <__mulsf3_pse+0x8c>
 8bc:	fe 2b       	or	r31, r30
 8be:	88 0f       	add	r24, r24
 8c0:	91 1d       	adc	r25, r1
 8c2:	96 95       	lsr	r25
 8c4:	87 95       	ror	r24
 8c6:	97 f9       	bld	r25, 7
 8c8:	08 95       	ret

000008ca <__fp_inf>:
 8ca:	97 f9       	bld	r25, 7
 8cc:	9f 67       	ori	r25, 0x7F	; 127
 8ce:	80 e8       	ldi	r24, 0x80	; 128
 8d0:	70 e0       	ldi	r23, 0x00	; 0
 8d2:	60 e0       	ldi	r22, 0x00	; 0
 8d4:	08 95       	ret

000008d6 <__fp_nan>:
 8d6:	9f ef       	ldi	r25, 0xFF	; 255
 8d8:	80 ec       	ldi	r24, 0xC0	; 192
 8da:	08 95       	ret

000008dc <__fp_pscA>:
 8dc:	00 24       	eor	r0, r0
 8de:	0a 94       	dec	r0
 8e0:	16 16       	cp	r1, r22
 8e2:	17 06       	cpc	r1, r23
 8e4:	18 06       	cpc	r1, r24
 8e6:	09 06       	cpc	r0, r25
 8e8:	08 95       	ret

000008ea <__fp_pscB>:
 8ea:	00 24       	eor	r0, r0
 8ec:	0a 94       	dec	r0
 8ee:	12 16       	cp	r1, r18
 8f0:	13 06       	cpc	r1, r19
 8f2:	14 06       	cpc	r1, r20
 8f4:	05 06       	cpc	r0, r21
 8f6:	08 95       	ret

000008f8 <__fp_round>:
 8f8:	09 2e       	mov	r0, r25
 8fa:	03 94       	inc	r0
 8fc:	00 0c       	add	r0, r0
 8fe:	11 f4       	brne	.+4      	; 0x904 <__fp_round+0xc>
 900:	88 23       	and	r24, r24
 902:	52 f0       	brmi	.+20     	; 0x918 <__fp_round+0x20>
 904:	bb 0f       	add	r27, r27
 906:	40 f4       	brcc	.+16     	; 0x918 <__fp_round+0x20>
 908:	bf 2b       	or	r27, r31
 90a:	11 f4       	brne	.+4      	; 0x910 <__fp_round+0x18>
 90c:	60 ff       	sbrs	r22, 0
 90e:	04 c0       	rjmp	.+8      	; 0x918 <__fp_round+0x20>
 910:	6f 5f       	subi	r22, 0xFF	; 255
 912:	7f 4f       	sbci	r23, 0xFF	; 255
 914:	8f 4f       	sbci	r24, 0xFF	; 255
 916:	9f 4f       	sbci	r25, 0xFF	; 255
 918:	08 95       	ret

0000091a <__divmodhi4>:
 91a:	97 fb       	bst	r25, 7
 91c:	09 2e       	mov	r0, r25
 91e:	07 26       	eor	r0, r23
 920:	0a d0       	rcall	.+20     	; 0x936 <__divmodhi4_neg1>
 922:	77 fd       	sbrc	r23, 7
 924:	04 d0       	rcall	.+8      	; 0x92e <__divmodhi4_neg2>
 926:	0c d0       	rcall	.+24     	; 0x940 <__udivmodhi4>
 928:	06 d0       	rcall	.+12     	; 0x936 <__divmodhi4_neg1>
 92a:	00 20       	and	r0, r0
 92c:	1a f4       	brpl	.+6      	; 0x934 <__divmodhi4_exit>

0000092e <__divmodhi4_neg2>:
 92e:	70 95       	com	r23
 930:	61 95       	neg	r22
 932:	7f 4f       	sbci	r23, 0xFF	; 255

00000934 <__divmodhi4_exit>:
 934:	08 95       	ret

00000936 <__divmodhi4_neg1>:
 936:	f6 f7       	brtc	.-4      	; 0x934 <__divmodhi4_exit>
 938:	90 95       	com	r25
 93a:	81 95       	neg	r24
 93c:	9f 4f       	sbci	r25, 0xFF	; 255
 93e:	08 95       	ret

00000940 <__udivmodhi4>:
 940:	aa 1b       	sub	r26, r26
 942:	bb 1b       	sub	r27, r27
 944:	51 e1       	ldi	r21, 0x11	; 17
 946:	07 c0       	rjmp	.+14     	; 0x956 <__udivmodhi4_ep>

00000948 <__udivmodhi4_loop>:
 948:	aa 1f       	adc	r26, r26
 94a:	bb 1f       	adc	r27, r27
 94c:	a6 17       	cp	r26, r22
 94e:	b7 07       	cpc	r27, r23
 950:	10 f0       	brcs	.+4      	; 0x956 <__udivmodhi4_ep>
 952:	a6 1b       	sub	r26, r22
 954:	b7 0b       	sbc	r27, r23

00000956 <__udivmodhi4_ep>:
 956:	88 1f       	adc	r24, r24
 958:	99 1f       	adc	r25, r25
 95a:	5a 95       	dec	r21
 95c:	a9 f7       	brne	.-22     	; 0x948 <__udivmodhi4_loop>
 95e:	80 95       	com	r24
 960:	90 95       	com	r25
 962:	bc 01       	movw	r22, r24
 964:	cd 01       	movw	r24, r26
 966:	08 95       	ret

00000968 <_exit>:
 968:	f8 94       	cli

0000096a <__stop_program>:
 96a:	ff cf       	rjmp	.-2      	; 0x96a <__stop_program>
